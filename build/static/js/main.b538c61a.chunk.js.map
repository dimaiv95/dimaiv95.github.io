{"version":3,"sources":["components/error-indicator/error.svg","utils/index.js","components/logo/index.js","components/logo/Logo.js","components/header/index.js","components/header/Header.js","components/loading-line/LoadingLine.js","components/loading-line/index.js","components/content/index.js","components/content/Content.js","components/error-indicator/ErrorIndicator.js","components/error-indicator/index.js","context/firestore-context.js","hoc/index.js","hoc/withFirestoreService.js","store/actions/firestoreAction.js","components/masonry-di-viewbox/MasonryDIViewBox.js","components/masonry-di-viewbox/index.js","components/masonry-di/lib/index.js","components/masonry-di/masonry-di-item/index.js","components/masonry-di/masonry-di-item/MasonryDIItem.js","components/masonry-di/MasonryDI.js","components/masonry-di/index.js","components/pages/home/Home.js","components/pages/home/index.js","components/pages/albums/album/Album.js","components/pages/albums/album/index.js","components/pages/albums/Albums.js","components/pages/albums/index.js","components/pages/about-me/index.js","components/pages/about-me/AboutMe.js","components/pages/not-found/index.js","components/pages/not-found/NotFound.js","components/app/App.js","components/app/index.js","components/error-boundry/index.js","components/error-boundry/ErrorBoundry.js","services/config/index.js","services/config/fbConfig.js","services/index.js","services/firestore-service.js","store/reducers/firestoreReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","getTotalLength","el","Logo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startAnimation","completeAnimation","elements","cover","logo","and","yellow1","yellow2","blue1","blue2","letters","underline","setState","prevProps","prevState","self","_this$elements","anime","timeline","easing","duration","complete","document","body","style","overflowX","overflowY","display","add","targets","strokeDashoffset","strokeDasharray","top","translateY","translateX","scale","opacity","_this2","infinite","react_default","a","createElement","react","className","ref","react_router_dom","to","version","id","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","d","mask","stroke","strokeWidth","strokeLinecap","strokeMiterlimit","Component","Header","LoadingLine","assertThisInitialized","loadingLineLength","loadingLine","loadingLineThree","loadingAnimation","pause","loop","props","countRequest","console","log","preserveAspectRatio","gradientUnits","x1","y1","x2","y2","offset","stopColor","width","height","connect","photos","loading","count","loadingAll","all","loadingSingle","single","Content","_ref","children","ErrorIndicator","statusError","textError","src","errorSVG","alt","defaultProps","React","createContext","FirestoreServiceProvider","Provider","FirestoreServiceConsumer","Consumer","withFirestoreService","Wrapper","firestoreService","assign","photosLoaded","allPhotos","type","payload","photosError","error","photoError","albumsError","MasonryDIViewBox","getSizePhoto","widthView","documentElement","clientWidth","heightView","clientHeight","percentView","getPercent","factorView","getFactor","resize","setSize","params","runAnimation","percent","percentW","percentH","factorImg","widthViewFactor","heightViewFactor","ready","pathLength","path1","path2","half","third","dasharray","rectY","rectB","i","dealy","window","addEventListener","match","split","fetchPhoto","removeEventListener","nextProps","nextState","photo","_this$props","history","_this$state","onClick","action","push","goBack","concat","compose","withRouter","singlePhoto","dispatch","_ref3","getSinglePhoto","method","then","doc","exists","data","catch","fetchSinglePhoto","getSize","elem","box","getBoundingClientRect","right","left","bottom","getAmountLine","widthDocument","setting","Math","floor","gap","createPositions","amountLine","stopIter","stopWidth","stopHeights","length","positions","maxWidth","maxHeight","currentWidth","currentHeight","prevHeight","newWidth","newHeight","current","max","apply","toFixed","MasonryDIItem","shouldUpdate","item","itemRef","factor","_item$hash","hash","title","w","h","color","description","styleItem","styleFigure","backgroundColor","styleImage","path","process","srcSet","MasonryDI","resizeMasonryDI","e","setResponse","responsive","oldAmountLine","oldWidthItem","elementsRef","containerRef","defaultWidth","widthContainer","heightContainer","loadMasonryDI","currentRef","slice","sizes","toConsumableArray","breakpoints","media","widthItem","styleContainer","items","map","createRef","masonry_di_item","key","Home","fetchPhotos","text","status","error_indicator","react_router","component","masonry_di","ownProps","getAllPhotos","querySnapshot","empty","forEach","objectSpread","Album","getSingleAlbum","album","fetchSingleAlbum","Albums","hasAlbum","name","fetchAllAlbums","albums","url","render","masonry_di_viewbox","albums_album","allAlbums","getAllAlbums","AboutMe","NotFound","App","loading_line","components_logo","header","content","exact","ErrorBoundry","isError","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirestoreService","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","db","collection","get","abrupt","sent","stop","_ref2","_callee2","_context2","_x","arguments","_callee3","_context3","_ref4","_callee4","_context4","where","_x2","firebase","initializeApp","firestore","initialState","firestoreReducer","undefined","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","value","error_boundry","app","getElementById"],"mappings":"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","file":"static/js/main.b538c61a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.0d58082f.svg\";","const getTotalLength = (el) => {\r\n    return el.getTotalLength();\r\n};\r\n\r\nexport { getTotalLength };","import Logo from \"./Logo\";\r\nexport default Logo;","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTotalLength } from \"../../utils\";\r\n\r\nimport anime from \"animejs/lib/anime\";\r\n\r\nimport \"./Logo.css\"\r\n\r\n\r\nclass Logo extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            startAnimation: false,\r\n            completeAnimation: false\r\n        }\r\n\r\n        this.elements = {\r\n            cover: null,\r\n            logo: null,\r\n            and: {\r\n                yellow1: null,\r\n                yellow2: null,\r\n                blue1: null,\r\n                blue2: null\r\n            },\r\n            letters: null,\r\n            underline: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        this.setState({\r\n            startAnimation: true\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n\r\n        const self = this;\r\n\r\n        const { cover, logo, letters, underline, and } = this.elements;\r\n        const { yellow1, yellow2, blue1, blue2 } = and;\r\n\r\n        if(this.state.startAnimation && prevState.startAnimation !== this.state.startAnimation){\r\n            anime.timeline({\r\n                easing: \"linear\",\r\n                duration: 1200,\r\n                complete: function(){\r\n                    document.body.style.overflowX = \"hidden\";\r\n                    document.body.style.overflowY = \"auto\";\r\n                    cover.style.display = \"none\";\r\n                }\r\n            })\r\n                .add({\r\n                    targets: letters,\r\n                    duration: 5000,\r\n                    strokeDashoffset: [getTotalLength(letters), 0]\r\n                })\r\n                .add({\r\n                    targets: yellow1,\r\n                    strokeDashoffset: [getTotalLength(yellow1), 0],\r\n                }, \"-=3600\")\r\n                .add({\r\n                    targets: yellow2,\r\n                    strokeDashoffset: [getTotalLength(yellow2), 0],\r\n                }, \"-=2550\")\r\n                .add({\r\n                    targets: blue1,\r\n                    strokeDasharray: getTotalLength(blue1),\r\n                    strokeDashoffset: [getTotalLength(blue1), 0],\r\n                }, \"-=3200\")\r\n                .add({\r\n                    targets: blue2,\r\n                    strokeDasharray: getTotalLength(blue2),\r\n                    strokeDashoffset: [getTotalLength(blue2), 0],\r\n                }, \"-=2140\")\r\n                .add({\r\n                    targets: underline,\r\n                    duration: 1000,\r\n                    strokeDasharray: getTotalLength(underline),\r\n                    strokeDashoffset: [getTotalLength(underline), 0],\r\n                }, \"-=200\")\r\n                .add({\r\n                    targets: logo,\r\n                    easing: \"easeInOutQuad\",\r\n                    duration: 1000,\r\n                    top: 0,\r\n                    translateY: [\"-50%\", 0],\r\n                    translateX: [\"-50%\", \"-50%\"],\r\n                    scale: [2, 1],\r\n                    complete: () => {\r\n                        self.setState({\r\n                            completeAnimation: true\r\n                        });\r\n                    }\r\n                })\r\n                .add({\r\n                    targets: cover,\r\n                    easing: \"easeInOutQuad\",\r\n                    duration: 600,\r\n                    opacity: [1, 0]\r\n                }, \"+=100\");\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const { completeAnimation } = this.state;\r\n        const infinite = completeAnimation ? \"logo infinite\" : \"logo\";\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"cover\" ref={ (ref) => this.elements.cover = ref } ></div>\r\n                <div className={ infinite } ref={ (ref) => this.elements.logo = ref } >\r\n                <Link to=\"/\" >\r\n                    <svg version=\"1.1\" id=\"svg-logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 833.91 377.35\" enableBackground=\"new 0 0 833.91 377.35\" xmlSpace=\"preserve\">\r\n    \r\n                        <g id=\"group-letters\">\r\n                            <path fill=\"#E0CD1E\" d=\"M138.61,190.9c-0.13-0.16-0.3-0.28-0.51-0.37c-0.42-0.18-0.82-0.11-1.21,0.22\r\n                                c-1.58-0.14-3.05-0.3-4.41-0.49c-1.36-0.19-2.7,0.27-4.03,1.39c-1.33,1.12-2.38,2.33-3.14,3.64c-0.77,1.31-1.62,2.76-2.55,4.34\r\n                                c-0.18,1.22-0.52,2.44-1.03,3.66c-0.51,1.22-1,2.58-1.5,4.05c-0.25-0.46-0.52-0.89-0.81-1.32c-0.29-0.42-0.52-0.89-0.69-1.42\r\n                                l-0.59-0.7c-0.26-0.31-0.49-0.59-0.69-0.82c-0.2-0.23-0.42-0.58-0.67-1.04c-0.46-0.55-0.73-1.11-0.83-1.7\r\n                                c-0.64-0.92-1.31-1.8-2-2.62c-0.69-0.82-1.39-1.66-2.12-2.52l-4.13-4.92l-1.48-1.76c-0.85-1.02-1.56-2.09-2.11-3.23\r\n                                c-0.24-0.6-0.52-1.09-0.85-1.49c-0.33-0.39-0.66-0.78-0.98-1.17c-0.79-0.94-1.27-1.6-1.46-1.97c0.03-1.23-0.52-1.89-1.67-1.99\r\n                                c-0.39,0.33-0.64,0.27-0.75-0.17c-0.24-0.6-0.39-0.94-0.45-1.02l-1.18-1.41c-0.59-0.7-0.91-1.17-0.96-1.39\r\n                                c-0.02-0.65-0.42-1.45-1.2-2.39c-1.02-0.74-1.86-1.5-2.52-2.28c-0.41-0.32-0.79-0.7-1.15-1.13c-0.36-0.43-0.7-0.84-1.03-1.23\r\n                                l-10.14-12.08l-4.33-5.16c-0.33-0.39-0.63-0.71-0.89-0.95c-0.27-0.24-0.61-0.52-1.01-0.85c-0.5-0.91-0.98-1.84-1.44-2.79\r\n                                c-0.46-0.94-0.97-1.91-1.54-2.91c-1.9-2.27-3.63-4.68-5.18-7.24c-1.55-2.56-3.04-5.17-4.48-7.83c-1.51-1.8-2.88-3.75-4.11-5.85\r\n                                c-1.23-2.1-2.6-4.05-4.11-5.85l-3.05-3.63c-0.65-1.72-1.3-2.58-1.95-2.56c-0.65,0.02-1.61,0.22-2.88,0.62\r\n                                c-0.23,0.2-0.97,0.48-2.19,0.84c-1.23,0.36-2.59,0.77-4.07,1.22c-1.49,0.45-2.96,0.88-4.41,1.3c-1.45,0.42-2.47,0.74-3.07,0.98\r\n                                c-1.1,0.12-2.29,0.52-3.58,1.21c-0.69,0.45-1.29,0.88-1.8,1.31c-0.51,0.43-1,0.84-1.47,1.23l-2.11,1.77\r\n                                c-0.39,0.33-0.71,0.63-0.95,0.89c-0.24,0.27-0.52,0.54-0.83,0.8c-0.25,0.34-0.51,0.66-0.79,0.96c-0.28,0.3-0.51,0.66-0.69,1.08\r\n                                c-0.49,0.68-0.73,1.35-0.72,2c0.07,0.08,0.14,0.52,0.21,1.32c0.08,0.8,0.16,1.66,0.26,2.58c0.1,0.92,0.2,1.83,0.3,2.74\r\n                                c0.1,0.92,0.28,1.53,0.55,1.84l2.85,3.4c0.09,0.59,0.4,1.2,0.93,1.82c0.18,0.38,0.39,0.71,0.62,0.98c0.23,0.27,0.36,0.59,0.4,0.96\r\n                                c0.58,0.85,1.12,1.66,1.64,2.42c0.51,0.77,1.06,1.58,1.63,2.42c0.5,0.92,1.06,1.78,1.67,2.59c0.62,0.82,1.21,1.72,1.77,2.71\r\n                                c0.33,0.39,0.67,0.8,1.03,1.23c0.36,0.43,0.67,0.88,0.92,1.33c0.39,0.47,0.77,0.96,1.12,1.46c0.35,0.5,0.73,0.99,1.12,1.46\r\n                                c0.77,1.08,1.58,2.21,2.42,3.36c0.84,1.16,1.68,2.32,2.52,3.48c0.76,1.23,1.56,2.42,2.4,3.58c0.84,1.16,1.68,2.32,2.52,3.48\r\n                                c0.33,0.39,0.65,0.82,0.97,1.28c0.32,0.46,0.65,0.89,0.97,1.28c0.31,0.54,0.67,1.04,1.06,1.51c0.39,0.47,0.79,0.94,1.18,1.41\r\n                                c0.98,1.17,1.97,2.35,2.95,3.52c0.98,1.17,1.93,2.38,2.83,3.62c0.97,1.32,1.97,2.58,2.98,3.79c1.02,1.21,2.13,2.38,3.33,3.5\r\n                                L63,193.2c0.5,0.91,0.93,1.75,1.3,2.5c0.25,0.46,0.64,1,1.16,1.62c0.41,0.33,0.9,0.84,1.49,1.54c0.46,0.55,0.92,1.1,1.38,1.64\r\n                                c0.46,0.55,0.96,1.06,1.5,1.54c0.98,1.17,1.99,2.13,3.01,2.87l2.36,2.81c0.59,0.7,0.94,1.21,1.06,1.51c0.17,0.52,0.51,0.84,1,0.96\r\n                                c0.8,0.8,1.6,1.63,2.39,2.49c0.79,0.87,1.58,1.77,2.37,2.71c0.72,0.86,1.5,1.71,2.33,2.54c0.83,0.83,1.73,1.58,2.68,2.25\r\n                                c0.94,0.81,1.89,1.61,2.83,2.42c0.94,0.81,1.89,1.62,2.83,2.42c0.34,0.25,0.61,0.45,0.82,0.61c0.2,0.16,0.44,0.33,0.72,0.5\r\n                                c0.2,0.23,0.36,0.47,0.48,0.69c0.12,0.23,0.25,0.42,0.38,0.58c0.72,0.86,1.48,1.49,2.28,1.88c0.8,0.4,1.56,1.02,2.28,1.88\r\n                                c1.9,2.27,4.12,3.64,6.65,4.11c2.53,0.48,5.25,0.62,8.17,0.44c0.78,0.14,1.6-0.08,2.45-0.65c0.84-0.58,1.5-1.06,1.97-1.46\r\n                                c0-0.8,0.32-1.6,0.97-2.41c0.65-0.81,1-1.58,1.07-2.3c0.94-0.79,1.69-1.48,2.25-2.09c0.56-0.6,1.07-1.5,1.54-2.69\r\n                                c1.48-2.84,2.97-5.66,4.49-8.46c1.51-2.8,3.04-5.58,4.59-8.35c0.47-0.39,0.91-1.09,1.33-2.11c0.42-1.01,0.66-1.95,0.74-2.81\r\n                                c0.14-1.58,0.6-3.17,1.39-4.77c0.79-1.59,1.42-2.99,1.89-4.18c0.03-0.29,0.02-0.61-0.02-0.98\r\n                                C139.04,191.74,138.87,191.21,138.61,190.9z\" mask=\"url('#drawing-letters')\" />\r\n                            <path fill=\"#E0CD1E\" d=\"M108.94,125.75c0.23-0.02,0.38,0.21,0.46,0.71c0.08,0.5,0.09,1.03,0.04,1.61\r\n                                c-0.05,0.58-0.11,1.14-0.19,1.67c-0.08,0.54-0.09,0.85-0.03,0.93c0.03,0.23,0.23,0.64,0.62,1.24c0.42,0.46,0.79,0.65,1.1,0.57\r\n                                c0.45-0.05,0.85-0.19,1.19-0.41l1.19-0.41c0.71-0.22,1.32-0.68,1.84-1.38c0.37-0.36,0.72-0.68,1.03-0.94\r\n                                c0.31-0.26,0.62-0.55,0.9-0.86c0.37-0.36,0.73-0.66,1.07-0.88c0.34-0.22,0.66-0.49,0.94-0.79c0.37-0.36,0.72-0.68,1.03-0.94\r\n                                c0.31-0.26,0.68-0.54,1.11-0.81c0.68-0.44,1.2-0.96,1.55-1.55c0.23-0.39,0.45-0.75,0.67-1.07c0.21-0.32,0.4-0.65,0.54-0.99\r\n                                c0.29-0.67,0.24-1.31-0.15-1.91c-0.47-0.54-1.08-0.82-1.82-0.83c-0.51-0.03-0.99-0.02-1.44,0.02c-0.73-0.01-1.24-0.04-1.53-0.1\r\n                                c-1.69-0.36-3.27,0.12-4.73,1.43c-0.2,0.25-0.76,0.56-1.69,0.91c-0.93,0.36-1.47,0.59-1.64,0.7c-0.12,0.2-0.26,0.35-0.43,0.46\r\n                                c-0.49,0.56-1.04,1.25-1.66,2.08C108.32,125.03,108.32,125.54,108.94,125.75z\" mask=\"url('#drawing-letters')\" />\r\n                            <path fill=\"#E0CD1E\" d=\"M257.22,107.91c-0.66-0.3-1.09-0.3-1.31,0c-0.21,0.3-0.46,0.67-0.73,1.09c-0.19,0.95-0.28,2.01-0.26,3.21\r\n                                c0.01,1.2-0.1,2.49-0.33,3.89c-0.33,2.31-0.65,4.58-0.95,6.82c-0.3,2.24-0.6,3.69-0.9,4.35c-0.37,1.34-1.02,2.79-1.96,4.34\r\n                                c-0.41,0.37-0.82,0.86-1.25,1.45c-0.12,0.27-0.24,0.45-0.37,0.55c-0.12,0.1-0.25,0.29-0.37,0.55c-1.01,1.36-1.99,2.25-2.92,2.66\r\n                                c-0.94,0.41-1.84,0.61-2.71,0.61c-1-0.06-1.9-0.27-2.69-0.62c-0.37-0.4-0.7-0.83-0.97-1.27c-0.28-0.44-0.53-0.83-0.77-1.18\r\n                                c-0.24-0.34-0.46-0.64-0.67-0.89c-1.31-2.01-2.79-4.43-4.45-7.24c-1.66-2.81-3.24-5.62-4.74-8.44c1.22-1.11,2.5-2.03,3.86-2.77\r\n                                c1.36-0.73,2.66-1.55,3.9-2.45c1.24-0.9,2.3-1.93,3.17-3.08c0.88-1.15,1.44-2.69,1.68-4.64c0.44-1.15,0.55-2.3,0.33-3.48\r\n                                c-0.22-1.17-0.65-2.29-1.27-3.37c0.06-0.13,0.07-0.24,0.04-0.34c-0.18-3.09-1.86-5.35-5.01-6.78c-1.13-0.67-2.54-0.95-4.25-0.85\r\n                                c-2.75-0.93-5.45-0.72-8.11,0.61c-0.19,0.07-0.35,0.08-0.48,0.02c-0.93,0.13-1.91,0.29-2.94,0.45c-1.03,0.17-2.07,0.45-3.12,0.85\r\n                                c-0.61,0.12-1.15,0.35-1.62,0.69c-0.47,0.34-1.01,0.73-1.6,1.18c-0.87,0.88-1.68,1.75-2.44,2.64c-0.76,0.89-1.49,1.84-2.19,2.87\r\n                                c-1.44,1.96-2.57,3.75-3.38,5.36c-0.3,0.66-0.6,1.23-0.9,1.73c-0.3,0.5-0.62,1.03-0.96,1.59c-0.59,1.32-0.84,2.39-0.75,3.23\r\n                                c-0.2,0.62-0.37,1.18-0.52,1.67c-0.14,0.49-0.27,1.03-0.37,1.61c-0.14,0.49-0.31,0.99-0.5,1.5c-0.19,0.51-0.34,1.05-0.44,1.64\r\n                                c-0.05,0.45,0.02,1.2,0.18,2.22c-0.07,0.68,0.04,1.4,0.33,2.17c0.03,0.64,0.11,1.16,0.25,1.54c0.22,0.57,0.35,1.07,0.4,1.49\r\n                                c0.05,0.42,0.12,0.83,0.22,1.23c0.1,0.4,0.19,0.86,0.27,1.37c0.05,0.42,0.15,0.82,0.29,1.2c0.14,0.38,0.21,0.85,0.2,1.4\r\n                                c0.18,0.48,0.47,0.97,0.88,1.47c0.04,0.1,0.08,0.22,0.11,0.34c-0.07,0.45-0.13,1.2-0.18,2.25c-0.07,1.65-0.19,3.54-0.35,5.69\r\n                                c-0.16,2.15-0.31,4.32-0.44,6.51c-0.14,2.19-0.33,3.93-0.59,5.21c-0.43,2.06-0.98,3.68-1.62,4.88c-0.65,1.19-1.2,2.02-1.65,2.48\r\n                                c-1.09,0.56-2.27,1.11-3.54,1.65c-1.27,0.54-2.53,0.27-3.77-0.81c-0.05-0.32-0.19-0.7-0.42-1.16c0.09-0.27,0.17-0.52,0.23-0.72\r\n                                s0.14-0.44,0.23-0.72c0.49-1.05,0.77-2.29,0.85-3.71c0.64-4.34,0.88-9.11,0.73-14.32c-0.12-2.69-0.33-5.45-0.64-8.28\r\n                                c-0.31-2.83-0.68-5.67-1.12-8.55c-0.53-2.82-1.1-5.66-1.7-8.5c-0.6-2.85-1.31-5.72-2.11-8.64c-0.81-2.91-1.64-5.7-2.49-8.36\r\n                                c-0.85-2.66-1.79-5.22-2.82-7.67c-1.03-2.45-2.12-4.73-3.26-6.84c-1.14-2.11-2.34-4.05-3.59-5.81c-2.32-3.63-4.82-6.24-7.48-7.86\r\n                                c-0.74-0.31-1.41-0.62-2.03-0.94c-0.62-0.31-1.27-0.58-1.96-0.8c-1.37-0.44-2.88-0.58-4.52-0.43c-0.23,0-0.43,0.05-0.62,0.14\r\n                                c-0.18,0.09-0.39,0.14-0.61,0.14c-0.91,0.01-1.6,0.13-2.05,0.36c-0.82,0.19-1.62,0.37-2.39,0.54c-0.77,0.17-1.57,0.35-2.39,0.54\r\n                                c-0.82,0.19-1.59,0.42-2.32,0.68c-0.73,0.26-1.41,0.55-2.04,0.88c-0.46,0.23-0.85,0.47-1.19,0.7c-0.34,0.23-0.6,0.4-0.78,0.49\r\n                                c-0.18,0.55-0.58,0.99-1.22,1.31c-0.27,0.14-0.56,0.26-0.85,0.35c-0.3,0.1-0.63,0.24-0.99,0.42c-1.5,0.43-2.5,1.06-2.99,1.88\r\n                                c-0.58,0.88-0.96,2.16-1.12,3.85c-0.68,4.48-0.5,8.97,0.56,13.48l0.66,4.31c0.11,1.55,0.33,2.99,0.66,4.31\r\n                                c0.4,3.24,0.94,6.29,1.61,9.16l1.95,8.81c0.52,1.68,1.03,3.29,1.52,4.81c0.5,1.53,1,3.01,1.52,4.47\r\n                                c2.77,7.31,5.63,14.51,8.59,21.61c0.15,1.71,0.29,3.43,0.44,5.14c0.27,3.23,0.45,6.7,0.55,10.41c0.21,1.08,0.27,2.01,0.18,2.8\r\n                                c-0.03,0.51-0.12,0.99-0.25,1.44c-0.13,0.45-0.22,0.93-0.25,1.44c-0.47,1.16-1.08,1.43-1.84,0.83c-1.26-1.01-2.23-2.02-2.89-3.05\r\n                                c-0.39-0.6-0.76-1.18-1.13-1.73c-0.36-0.56-0.65-1.19-0.87-1.9c-0.27-0.79-0.6-1.53-0.97-2.2c-0.38-0.67-0.74-1.37-1.1-2.12\r\n                                c-0.36-0.74-0.71-1.42-1.06-2.05c-0.35-0.63-0.67-1.27-0.97-1.92c-0.42-0.83-0.84-1.62-1.27-2.37c-0.43-0.75-0.94-1.49-1.52-2.21\r\n                                c-0.53-0.63-1.04-1.27-1.53-1.93c-0.49-0.66-0.95-1.33-1.4-2.01c-0.17-0.26-0.24-0.45-0.21-0.6c-0.19-0.48-0.39-0.93-0.6-1.34\r\n                                c-0.21-0.41-0.41-0.86-0.6-1.34c-0.19-0.48-0.41-0.95-0.64-1.41c-0.24-0.46-0.41-0.95-0.51-1.49c-0.27-0.79-0.59-1.56-0.95-2.3\r\n                                c-0.36-0.74-0.67-1.51-0.95-2.3c-0.14-0.4-0.31-0.99-0.51-1.77c-0.2-0.78-0.42-1.58-0.65-2.41c-0.23-0.82-0.43-1.55-0.59-2.17\r\n                                c-0.16-0.62-0.34-0.99-0.54-1.11c-0.82-0.32-1.6-0.3-2.34,0.06c-0.88,0.33-1.46,0.95-1.72,1.85c-0.26,0.54-0.69,1-1.29,1.38\r\n                                c-0.88-0.04-1.75,0.11-2.64,0.43c-0.05-0.08-0.15-0.14-0.29-0.17c-0.77,0.5-1.78,0.82-3.03,0.96c-1.25,0.14-1.95,0.56-2.1,1.27\r\n                                l-1.31,3.04c-0.06,0.28-0.06,0.47-0.01,0.55l-0.77,0.5c-0.69,0.45-0.83,0.97-0.44,1.57c0.22,0.34,0.37,0.67,0.46,0.98\r\n                                c0.05,0.82,0.39,1.63,1.03,2.43c0.28,0.06,0.38,0.12,0.29,0.17c0.27,0.8,0.45,1.35,0.53,1.66c0.11,0.17,0.17,0.32,0.19,0.43\r\n                                c0.01,0.12,0.05,0.21,0.1,0.3c0.27,0.8,0.47,1.28,0.58,1.45c0.22,0.71,0.47,1.43,0.76,2.15s0.57,1.49,0.84,2.28\r\n                                c0.36,0.74,0.7,1.46,1.04,2.16c0.33,0.7,0.63,1.45,0.91,2.24c0.17,0.26,0.3,0.51,0.39,0.75c0.1,0.24,0.2,0.45,0.31,0.62l0.08,0.68\r\n                                c0.46,1.65,0.83,2.96,1.1,3.94c0.27,0.98,0.53,1.94,0.77,2.88c0.24,0.94,0.51,1.95,0.79,3.04c0.28,1.09,0.64,2.54,1.07,4.32\r\n                                c0.07,1.05,0.22,2.26,0.44,3.64c0.23,1.38,0.58,2.45,1.08,3.22c0.42,0.46,0.84,0.73,1.26,0.82c0.85,0.18,1.38-0.41,1.59-1.76\r\n                                c-0.01-1.7-0.02-3.54-0.04-5.54s-0.2-3.73-0.55-5.21c-0.28-0.43-0.43-0.75-0.45-0.98c0.76,0.6,1.53,1.14,2.31,1.6\r\n                                c0.61,0.94,1.38,1.84,2.3,2.7c1.42,1.63,2.96,3.07,4.62,4.3c1.65,1.24,3.42,2.28,5.31,3.12c1.26,0.64,2.63,0.97,4.11,0.99\r\n                                c1.24,0.04,2.59-0.41,4.05-1.35c0.17-0.11,0.31-0.17,0.43-0.19c0.11-0.01,0.25-0.07,0.43-0.19c0.17-0.11,0.38-0.21,0.62-0.31\r\n                                c0.24-0.09,0.45-0.2,0.62-0.31c2.25-0.85,3.68-2.57,4.31-5.17c0.65-2,1-3.99,1.05-5.97c0.03-1.13-0.01-2.27-0.1-3.41\r\n                                c1.03,2.36,2.08,4.76,3.15,7.22c1.99,4.54,4.07,9.04,6.24,13.49c2.17,4.45,4.34,8.78,6.51,13c2.17,4.22,4.34,8.12,6.53,11.7\r\n                                c1.94,2.21,4.11,4.43,6.51,6.64c0.92,1.13,1.96,2.15,3.11,3.05l3.11,3.05c3.05,3.48,6.59,6.25,10.63,8.3\r\n                                c1.47,0.85,2.73,1.29,3.78,1.33c1.14-0.01,2.23-0.46,3.27-1.34c0.36-0.19,0.67-0.37,0.92-0.56c0.25-0.19,0.51-0.35,0.78-0.49\r\n                                c0.5-0.37,1.09-0.45,1.78-0.23c1.77-0.57,3.16-1.71,4.17-3.43c1.01-1.72,1.82-3.55,2.44-5.47c0.7-2.2,1.18-4.62,1.43-7.27\r\n                                l0.13-0.41c0.07-1.64,0.04-2.83-0.11-3.56c-0.37-0.73-0.66-1.73-0.85-3c-0.66-2.18-1.58-4.3-2.74-6.34c-0.74-1-1.34-1.89-1.81-2.68\r\n                                c-0.47-0.79-0.93-1.42-1.39-1.87c-1.62-2.04-3.21-3.8-4.78-5.29c-1.43-1.22-3.04-2.34-4.83-3.37c-0.83-0.49-1.67-0.95-2.51-1.38\r\n                                c-0.85-0.42-1.78-0.84-2.79-1.24c-0.74-0.31-1.46-0.66-2.17-1.04c-0.71-0.38-1.46-0.77-2.24-1.17l-3.25-9l-0.28-0.54\r\n                                c-0.24-0.68-0.47-1.36-0.71-2.05c-0.24-0.68-0.45-1.43-0.64-2.25c1.69-0.06,3.46-0.51,5.33-1.36c0.91-0.47,1.78-1.34,2.61-2.63\r\n                                c0.83-1.29,1.6-2.74,2.31-4.37c0.71-1.63,1.32-3.35,1.83-5.15c0.5-1.81,0.89-3.47,1.14-4.98c0.13-0.87,0.21-2.26,0.26-4.18\r\n                                c0.04-1.52,0.05-3.09,0.04-4.69c1.1,1.77,2.3,3.51,3.61,5.2c1.38,1.77,2.77,3.37,4.18,4.8c1.41,1.43,2.63,2.34,3.64,2.72\r\n                                c2.07,0.86,4.21,1.33,6.43,1.42c2.21,0.09,4.4-0.05,6.55-0.42c2.15-0.37,4.2-0.93,6.16-1.67c1.96-0.74,3.63-1.42,5.03-2.06\r\n                                c0.15-0.17,0.33-0.29,0.52-0.36c1.46-0.77,2.76-1.8,3.9-3.11c1.14-1.3,2.11-2.65,2.89-4.04c0.94-1.55,1.73-3.21,2.37-4.99\r\n                                c0.76-2.03,1.52-4.44,2.26-7.23c0.75-2.79,1.36-5.58,1.83-8.38c0.47-2.8,0.77-5.39,0.91-7.79c0.13-2.39-0.03-4.21-0.5-5.46\r\n                                C257.93,108.51,257.61,108.09,257.22,107.91z M189.53,147.59c-0.04,0.71-0.1,1.43-0.18,2.16c-0.04,0.37-0.14,0.79-0.29,1.27\r\n                                c-0.15,0.48-0.23,0.95-0.22,1.41l-0.21-0.41c-0.8-1.77-1.6-3.51-2.42-5.21c-0.82-1.7-1.65-3.48-2.49-5.35\r\n                                c-0.8-1.77-1.62-3.5-2.49-5.18c-0.86-1.68-1.83-3.33-2.9-4.97l-0.35-0.68c-1.16-1.13-1.9-2.58-2.24-4.36\r\n                                c-0.24-0.68-0.49-1.3-0.77-1.84c-0.28-0.54-0.58-1.13-0.91-1.77c-0.24-0.68-0.47-1.31-0.71-1.88c-0.24-0.57-0.4-1.17-0.5-1.81\r\n                                c-0.38-1.18-0.78-2.29-1.2-3.34c-0.42-1.04-0.84-2.09-1.27-3.13c-0.33-1.09-0.71-2.16-1.13-3.21c-0.42-1.04-0.8-2.11-1.13-3.21\r\n                                l-2.48-7.5c-0.19-0.82-0.36-1.65-0.51-2.49c-0.15-0.84-0.32-1.67-0.51-2.49l-0.87-4.71c0.17-0.78,0.19-1.53,0.04-2.26\r\n                                c-0.15-0.73-0.31-1.5-0.5-2.32c-0.19-0.82-0.43-1.61-0.71-2.39c-0.28-0.77-0.56-1.54-0.85-2.32c-0.52-1.22-0.62-2.32-0.31-3.28\r\n                                c0.13-0.87,0.71-1.63,1.75-2.28l1.23-0.63c0.18-0.09,0.35-0.21,0.51-0.35c0.16-0.14,0.33-0.25,0.51-0.35\r\n                                c0.27-0.37,0.4-0.67,0.4-0.89c0.37,0.27,0.58,0.45,0.62,0.54c3.55,2.88,6.63,7.21,9.25,12.97c1.4,2.95,2.69,5.96,3.86,9.03\r\n                                c1.17,3.07,2.26,6.24,3.25,9.51c0.95,3.41,1.83,6.75,2.64,10c0.81,3.26,1.49,6.52,2.02,9.8c0.54,3.28,0.97,6.3,1.3,9.06\r\n                                c0.33,2.76,0.55,5.25,0.66,7.49c-0.08,0.96-0.08,1.85,0,2.67s0.1,1.64,0.06,2.46C189.56,146.14,189.57,146.88,189.53,147.59z\r\n                                M205.87,189.44c0.87,0.47,1.79,0.97,2.75,1.51c1.38,0.9,2.88,2.25,4.49,4.06c0.83,0.95,1.63,1.89,2.39,2.81\r\n                                c0.76,0.93,1.51,1.89,2.26,2.88c1.3,1.86,2.44,3.97,3.42,6.33c0.89,2.18,1.28,4.05,1.16,5.6c-0.09,0.05-0.09,0.16,0,0.34\r\n                                c-0.64-0.36-1.31-0.99-2.01-1.89c-0.46-0.68-0.93-1.36-1.39-2.04c-0.46-0.68-0.97-1.34-1.53-1.97c-0.93-1.13-2.1-2.19-3.53-3.18\r\n                                c-0.23-0.23-0.47-0.47-0.73-0.75c-0.26-0.27-0.5-0.52-0.73-0.75c-0.7-0.91-1.37-1.88-2.02-2.92c-0.65-1.04-1.28-2.04-1.88-2.99\r\n                                c-0.93-1.36-1.8-2.72-2.61-4.08c-0.81-1.36-1.66-2.79-2.54-4.29C204.17,188.54,205,188.97,205.87,189.44z M226.55,112.93\r\n                                c-1.2-2.6-1.91-4.62-2.13-6.07c-0.09-0.51-0.19-0.94-0.32-1.27c-0.13-0.33-0.17-0.73-0.12-1.18c0.13-0.81,0.27-1.6,0.42-2.37\r\n                                c0.15-0.76,0.35-1.52,0.61-2.28c0.36-0.79,0.68-1.37,0.97-1.76c0.29-0.38,0.67-0.83,1.14-1.33c1.08-1.17,2.28-1.62,3.58-1.35\r\n                                l0.14-0.05c1.05,0.48,1.91,1.02,2.58,1.64c0.7,0.72,1.3,1.42,1.78,2.11c0.24,0.35,0.43,0.71,0.58,1.09\r\n                                c0.11,0.29,0.24,0.56,0.4,0.83c0.16,0.27,0.36,0.46,0.63,0.58c0.17,0.16,0.38,0.29,0.65,0.41l0.16,0.43\r\n                                c-0.37,0.47-0.69,1.13-0.96,2c-0.27,0.87-0.59,1.53-0.96,2c-1.34,1.38-2.74,2.56-4.22,3.55C230,110.92,228.35,111.92,226.55,112.93\r\n                                z\" mask=\"url('#drawing-letters')\" />\r\n                            <path fill=\"#E0CD1E\" d=\"M795.59,128.04c-0.24-0.65-0.61-1.34-1.11-2.05c-0.56-0.63-1.97-1.96-4.23-3.98\r\n                                c-2.26-2.03-4.77-4.19-7.52-6.5c-2.76-2.3-5.39-4.46-7.91-6.48c-2.52-2.01-4.24-3.34-5.17-3.97c-0.25-0.17-0.54-0.39-0.84-0.67\r\n                                c-0.31-0.27-0.53-0.58-0.67-0.92c0.09-0.31,0.22-0.59,0.39-0.85c0.17-0.25,0.26-0.56,0.26-0.93c0.2-0.48,0.28-1.23,0.23-2.25\r\n                                c0.74-0.73,1.29-1.35,1.63-1.85c1.91-1.54,3.4-3.42,4.48-5.65c1.08-2.23,1.9-4.57,2.46-7.03c0.64-2.03,0.53-3.92-0.31-5.67\r\n                                c-0.85-1.75-2.29-2.94-4.32-3.58c-2.26-1.04-4.65-1.15-7.17-0.34c-2.53,0.81-4.75,1.99-6.65,3.53c-1.08,0.87-2.1,1.78-3.06,2.73\r\n                                c-0.96,0.95-1.95,1.82-2.97,2.61c-0.83,0.67-1.62,1.3-2.39,1.89c-0.77,0.59-1.55,1.11-2.35,1.55c-1.28,0.61-2.34,0.63-3.18,0.06\r\n                                c-0.08-0.06-1.44-1.07-4.05-3.03c-2.61-1.96-5.96-4.48-10.04-7.56c-4.08-3.08-8.62-6.47-13.63-10.18\r\n                                c-5.01-3.71-9.89-7.33-14.64-10.87c-4.75-3.53-9.18-6.79-13.27-9.75c-4.09-2.96-7.24-5.19-9.43-6.68\r\n                                c-1.69-1.15-3.41-2.28-5.17-3.42c-1.76-1.13-3.54-2.19-5.34-3.17c-0.55-0.37-1.08-0.56-1.61-0.6c0.03-0.8,0.05-1.6,0.04-2.42\r\n                                c-0.04-0.77-0.08-1.5-0.11-2.16c-0.03-0.66-0.06-1.27-0.07-1.82c-0.03-1.42-0.43-2.71-1.2-3.86c-0.38-0.46-0.56-0.85-0.55-1.18\r\n                                c0.04-0.42-0.01-0.87-0.16-1.36c-0.27-0.75-0.55-1.34-0.82-1.76c-0.22-0.3-0.86-0.48-1.92-0.54c-1.42,0.03-2.67,0.01-3.73-0.05\r\n                                c-1.35-0.17-2.69,0.22-4,1.15l-0.05,0.14l-0.29-0.1l-0.43-0.16l-5.84,1.3c-0.94,0.2-1.85,0.47-2.73,0.8\r\n                                c-0.88,0.33-1.78,0.71-2.69,1.14c-0.43,0.28-0.9,0.52-1.4,0.71c-0.51,0.2-1,0.37-1.49,0.52c-1.07,0.26-2.14,0.36-3.2,0.3\r\n                                c-0.61-0.11-1.24-0.02-1.9,0.29c-0.79,0.37-1.33,0.66-1.62,0.88c-1.09,0.91-2.03,1.54-2.81,1.91c-2.39,1.2-4.64,2.47-6.76,3.81\r\n                                s-4.09,2.89-5.91,4.61c-3.78,3.51-7.45,6.9-11.02,10.16c-0.63,0.53-1.24,1.1-1.84,1.69c-0.6,0.6-1.18,1.23-1.75,1.89\r\n                                c-0.47,0.7-0.97,1.33-1.5,1.9c-0.53,0.57-1.03,1.2-1.5,1.9c-0.58,0.99-1.19,1.99-1.82,3c-0.64,1.02-1.39,1.96-2.25,2.84\r\n                                c-0.67,0.95-1.37,1.89-2.08,2.83c-0.72,0.93-1.46,1.86-2.23,2.77c-0.8,1.01-1.55,2.48-2.25,4.39c-0.24,0.67-0.48,1.32-0.71,1.94\r\n                                c-0.23,0.63-0.51,1.26-0.85,1.89c-0.34,0.64-0.65,1.26-0.92,1.86c-0.27,0.61-0.55,1.29-0.83,2.06c-1.18,1.75-2.02,3.61-2.52,5.6\r\n                                c-0.16,1.03-0.34,1.99-0.56,2.89c-0.22,0.9-0.43,1.8-0.65,2.69c-0.12,0.93-0.31,1.82-0.56,2.65c-0.25,0.83-0.43,1.72-0.55,2.65\r\n                                c-0.08,0.52-0.21,1.01-0.38,1.49c-0.17,0.48-0.3,0.98-0.38,1.49c-0.08,0.52-0.18,1.02-0.31,1.52c-0.13,0.5-0.23,1-0.31,1.52\r\n                                c-0.01,0.32-0.06,0.6-0.14,0.84c-0.09,0.24-0.13,0.52-0.14,0.84l-0.14-0.05l-0.05,0.14c-0.04,0.1-0.03,0.15,0.02,0.17\r\n                                c0.05,0.02,0.05,0.08,0.02,0.17c-0.04,0.42-0.13,0.82-0.27,1.2c-0.14,0.38-0.23,0.79-0.27,1.2c-0.09,0.84-0.2,1.59-0.33,2.24\r\n                                c-0.05,0.25-0.09,0.52-0.13,0.78c-0.39-0.25-0.74-0.53-1.02-0.88c-1.47,1.46-2.65,2.69-3.55,3.69c-0.9,1-1.71,1.95-2.42,2.84\r\n                                c1.17-2.98,2.1-5.91,2.79-8.79c0.68-2.88,0.61-6.03-0.21-9.45c-0.64-2.33-1.74-4.35-3.3-6.05c-1.56-1.7-3.5-2.75-5.81-3.15\r\n                                c-2.29-0.5-4.75-0.62-7.37-0.36c-2.62,0.26-4.96,1.06-7.02,2.38c-0.71,0.37-1.38,0.8-2,1.29c-0.09-0.54-0.19-1.06-0.29-1.55\r\n                                c-0.1-0.49-0.2-1.01-0.29-1.55c-0.78-2.15-1.82-3.38-3.12-3.66c-0.2-0.04-0.42-0.12-0.66-0.22c-0.24-0.1-0.46-0.18-0.66-0.22\r\n                                c-0.17-0.66-0.52-1.21-1.05-1.64c-0.41-0.51-0.9-0.77-1.47-0.79c-0.57-0.02-1.13,0.01-1.67,0.1c-0.18-0.14-0.41-0.27-0.7-0.39\r\n                                c-0.29-0.11-0.52-0.24-0.7-0.39c-0.55-0.33-1.13-0.56-1.73-0.69c-0.6-0.13-1.15-0.25-1.64-0.36c-0.8-0.17-1.52-0.33-2.17-0.47\r\n                                c-0.65-0.14-1.38-0.25-2.2-0.33c-0.7-0.15-1.4-0.31-2.09-0.46c-0.7-0.15-1.42-0.41-2.18-0.79c-0.73-0.47-1.51-0.49-2.34-0.04\r\n                                c-0.12,0.08-0.21,0.11-0.26,0.1c-0.05-0.01-0.14,0.02-0.26,0.1c-0.02,0.1-0.08,0.14-0.18,0.12c-0.73,0.47-1.27,1.03-1.62,1.68\r\n                                c-0.09,0.4-0.4,0.85-0.92,1.36c-0.25,0.16-0.65,0.59-1.22,1.3c-0.47,0.73-0.69,1.26-0.66,1.58c-0.04,0.2-0.03,0.36,0.05,0.48\r\n                                c-1.03,1.34-1.63,2.2-1.82,2.58c-0.7,0.79-1.41,1.78-2.14,2.98c-0.73,1.2-1.47,2.42-2.21,3.67c-0.74,1.25-1.5,2.47-2.29,3.65\r\n                                c-0.78,1.19-1.47,2.19-2.07,3c-0.61,0.39-0.97,1.09-1.09,2.11c-0.12,1.02,0.22,1.88,1,2.57c1.01-0.3,1.57-0.62,1.7-0.96\r\n                                c0.13-0.34,0.54-0.9,1.23-1.69c1.53-1.75,3.05-3.56,4.56-5.43c1.5-1.86,3-3.78,4.47-5.76l-0.03,0.15\r\n                                c-0.57,2.59-1.16,5.18-1.78,7.76c-0.62,2.58-1.26,5.16-1.93,7.73c-0.67,2.57-1.25,5.13-1.76,7.68c-0.51,2.55-0.95,5.15-1.31,7.78\r\n                                c-0.02,1.04-0.1,1.91-0.26,2.61c-0.01,0.52-0.05,0.96-0.13,1.3c-0.08,0.35-0.17,0.77-0.28,1.27c-0.23,1.52-0.46,3.03-0.68,4.55\r\n                                c-0.23,1.52-0.5,3.02-0.83,4.52c-0.56,3.01-1.21,6-1.96,8.97c-0.6,2.27-1.17,4.52-1.71,6.75c-0.54,2.23-1.11,4.48-1.71,6.75\r\n                                c-0.58,2.17-1.13,4.35-1.66,6.53c-0.53,2.18-1.09,4.36-1.66,6.53l-0.95,4.34c-0.17,0.8-0.33,1.52-0.47,2.17s-0.35,1.36-0.62,2.14\r\n                                c-0.21,0.47-0.4,1.01-0.58,1.6c-0.18,0.59-0.33,1.13-0.43,1.63c-0.13,0.6-0.23,1.18-0.3,1.74c-0.07,0.56-0.12,1.15-0.15,1.77\r\n                                c-0.11,0.5-0.21,1.05-0.29,1.66c-0.08,0.61-0.13,1.17-0.14,1.7c-0.08,1.34-0.41,2.36-0.99,3.07c-0.09,0.4-0.1,0.71-0.05,0.93\r\n                                c-0.09,0.4,0.02,0.63,0.32,0.7c0.25,0.27,0.49,0.52,0.69,0.78c0.2,0.25,0.44,0.51,0.69,0.78c0.59,0.65,1.18,1.04,1.78,1.17\r\n                                c0.6,0.13,0.98,0.27,1.16,0.41l1.25,0.74c2.42,2.3,4.94,3.22,7.55,2.75c0.2,0.04,0.48,0.21,0.83,0.5c0.28,0.16,0.66,0.3,1.16,0.41\r\n                                l2.84,0.62c0.8,0.17,1.69-0.1,2.69-0.82c0.24-0.16,0.47-0.26,0.7-0.32c0.22-0.06,0.45-0.16,0.7-0.32l0.15,0.03\r\n                                c1.31-0.24,2.45-0.72,3.45-1.44c0.97-0.63,1.85-1.53,2.63-2.71c1.4-2.1,2.7-5.31,3.91-9.64c1.21-4.33,2.2-8.76,2.99-13.29\r\n                                c0.93-5.23,1.8-10.84,2.59-16.83c-0.06-0.22,0.01-0.78,0.21-1.68l0.29-1.35c0.15-0.7,0.31-1.19,0.48-1.46\r\n                                c0.38-1.28,0.74-2.56,1.08-3.84c0.33-1.29,0.69-2.57,1.08-3.84c0.4-1.38,0.77-2.68,1.09-3.91c0.32-1.24,0.72-2.48,1.21-3.73\r\n                                c0.29-0.88,0.54-1.74,0.72-2.58c0.19-0.85,0.43-1.71,0.72-2.58l0.03-0.15c2.32,1.34,4.63,1.75,6.94,1.21\r\n                                c1.18-0.16,2.37-0.55,3.55-1.18c1.18-0.63,2.38-1.33,3.6-2.11c1.21-0.78,2.36-1.49,3.45-2.14c1.08-0.65,2.06-1.09,2.95-1.31\r\n                                c0.36-0.23,0.9-0.53,1.61-0.9c0.71-0.37,1.61-0.93,2.72-1.68c1.1-0.75,2.46-1.84,4.08-3.26c1.62-1.42,3.47-3.31,5.55-5.68\r\n                                c0.42-0.27,0.85-0.74,1.31-1.4c-0.28,1.86-0.57,3.84-0.86,5.98c-0.46,3.36-0.93,6.58-1.4,9.67c-0.47,3.09-0.89,5.81-1.26,8.17\r\n                                c-0.37,2.36-0.58,3.92-0.63,4.66c-0.16,1.03-0.27,2.24-0.34,3.62c-0.07,1.38,0.08,2.77,0.45,4.15c0.37,1.38,1.04,2.58,2.03,3.59\r\n                                c0.99,1.01,2.46,1.65,4.43,1.93c1.13,0.19,2.29,0.34,3.5,0.46c1.21,0.11,2.41,0.17,3.6,0.17c0.16,0.16,0.38,0.3,0.67,0.41\r\n                                c1.05,0.38,2.06,0.61,3.01,0.69c0.95,0.07,1.94,0.03,2.98-0.14c1.85-0.31,3.78-0.85,5.81-1.64c0.17-0.16,0.29-0.28,0.37-0.35\r\n                                c0.08-0.08,0.21-0.2,0.37-0.35c0.17-0.16,0.45-0.49,0.85-0.99c0.04-0.1,0.04-0.18,0.01-0.24c-0.03-0.07-0.03-0.15,0.01-0.24\r\n                                c0.07-0.19,0.09-0.32,0.06-0.39c-0.03-0.07-0.03-0.15,0.01-0.24l1.23-11.44l1.72-6.54l1.74-7.02l0.43-1.63\r\n                                c1.35-1.03,2.7-1.9,4.04-2.6c2.07-1.2,3.55-1.86,4.46-1.96c0.5-0.47,0.97-0.73,1.42-0.79c0.58-0.11,1.13-0.41,1.62-0.88\r\n                                c0.79-0.37,1.32-0.5,1.61-0.39c0.26-0.12,0.51-0.22,0.76-0.29c0.24-0.07,0.51-0.22,0.81-0.44c0.65-0.3,1.37-0.48,2.14-0.52\r\n                                c0.61,0.11,0.81,1.05,0.6,2.82c-1.61,3.54-3.35,6.98-5.22,10.32c-0.92,1.62-1.81,3.25-2.67,4.89c-0.87,1.64-1.73,3.34-2.58,5.09\r\n                                c-1.61,3.54-3.03,6.99-4.25,10.34c-0.57,1.86-1.08,3.71-1.53,5.55c-0.45,1.84-0.79,3.81-1.01,5.91c-0.01,0.32-0.01,0.84,0.01,1.55\r\n                                c0.01,0.71,0.03,1.42,0.04,2.13c0.01,0.71,0.1,1.58,0.27,2.62c0.11,0.58,0.39,1.39,0.83,2.42c0.44,1.03,1.04,1.68,1.81,1.96\r\n                                c1.15,0.42,2.77-0.24,4.87-1.98c2.1-1.74,4.22-3.84,6.37-6.32c2.15-2.48,4.1-4.86,5.86-7.16c1.75-2.29,2.87-3.79,3.34-4.49\r\n                                c0.43-0.6,1.49-1.85,3.15-3.74c1.66-1.89,3.46-3.93,5.39-6.1c0.58-0.65,1.14-1.28,1.69-1.9c-0.19,0.41-0.39,0.83-0.57,1.23\r\n                                c-0.62,1.4-1.17,2.79-1.64,4.15c-0.48,1.36-0.85,2.78-1.1,4.26c-0.25,1.48-0.51,3.01-0.76,4.61c-0.31,2.14-0.42,4.33-0.32,6.57\r\n                                c0.12,1.1,0.25,2.17,0.39,3.22c0.14,1.05,0.34,2.1,0.6,3.16c0.91,5.31,3.92,9.58,9.03,12.82c0.41,0.32,0.72,0.6,0.94,0.84\r\n                                c0.22,0.23,0.45,0.46,0.67,0.7c0.45,0.46,0.69,0.76,0.74,0.9l0.81,0.42c1.09,0.34,1.81,0.71,2.17,1.13\r\n                                c0.36,0.42,0.93,0.54,1.71,0.37c0.46,0.01,0.75-0.01,0.89-0.05l1.03,0.02c0.14-0.04,0.25-0.04,0.34,0.01\r\n                                c0.27,0.14,0.61,0.15,1.03,0.02c0.23,0,0.43-0.06,0.62-0.19l0.34,0c0.28-0.09,1.22-0.34,2.82-0.77l2.01-1.2\r\n                                c1.1-0.58,1.87-1.04,2.28-1.4c0.37-0.5,0.72-0.72,1.04-0.67c0.18,0.09,0.5-0.08,0.97-0.53l0.28-0.54c0.46-0.22,0.67-0.28,0.62-0.2\r\n                                c-0.05,0.09,0.28-0.2,0.97-0.87c0.37-0.04,0.8-0.33,1.32-0.87l0.69-0.33l0.35-0.68c0.42-0.81,0.63-0.99,0.63-0.54\r\n                                c0.08,0.28,0.34,0.12,0.76-0.47c0.56-0.63,0.88-0.92,0.97-0.87c0.09,0.05,0.55-0.4,1.39-1.35l0.84-0.94l0.64-1.22\r\n                                c0.28-0.54,0.86-1.22,1.75-2.02l2.38-2.9l1.3,0.16c1.14,0.02,2.18-0.1,3.12-0.36c0.94-0.26,1.55-0.43,1.82-0.52\r\n                                c0.27-0.09,1.19-0.53,2.76-1.32c1.56-0.79,2.77-1.78,3.61-2.95c0.32-0.41,0.3-1.02-0.07-1.85c-0.38-0.83-1.07-1.04-2.08-0.65\r\n                                c-0.19,0.13-0.66,0.49-1.42,1.07c-0.76,0.58-1.86,1.13-3.28,1.66c-0.37,0.04-0.84,0.17-1.41,0.39c-0.57,0.22-1.18,0.39-1.82,0.52\r\n                                c1.32-2.76,2.1-5.47,2.33-8.11c0.07-1.46,0.16-2.74,0.27-3.83c0.11-1.09,0.17-2.1,0.19-3.01c0.11-1.09,0.16-1.75,0.17-1.98\r\n                                c-0.09-0.28-0.17-0.78-0.25-1.51l-0.06-0.55l-0.2-0.62c0.01-0.91-0.11-1.78-0.37-2.61c-0.07-1.19-0.31-2.06-0.71-2.61\r\n                                c0.05-0.55-0.17-1.01-0.66-1.38l-1.39-2.97c-0.62-1.24-1.74-2.63-3.35-4.16c-1.62-1.53-3.18-2.52-4.67-2.95\r\n                                c-0.45-0.24-0.91-0.36-1.36-0.37c-0.46-0.01-0.96-0.04-1.5-0.09l-1.08-0.91l-8.39-5.75l-0.14-0.07c-0.46-0.01-0.78-0.06-0.96-0.15\r\n                                c-1.32-0.34-2.09-0.4-2.32-0.18c-0.36-0.19-0.68-0.3-0.95-0.32c-0.27-0.03-0.53-0.04-0.75-0.05c-0.55,0.17-0.99,0.35-1.31,0.53\r\n                                c-0.46,0.45-0.86,0.76-1.18,0.94c-0.46,0.22-0.83,0.49-1.11,0.8c-2.09,2.5-4.11,5.09-6.07,7.77c-2.31,1.93-4.84,4.26-7.63,7.01\r\n                                c-3.05,3.02-5.97,5.89-8.75,8.63c-2.79,2.73-5.21,5-7.28,6.8c-2.07,1.8-3.35,2.5-3.86,2.1c-0.25-0.2-0.34-0.56-0.26-1.07\r\n                                c0.08-0.51,0.26-1.1,0.56-1.75c0.29-0.65,0.59-1.25,0.9-1.79c0.3-0.54,0.51-0.96,0.61-1.24c0.07-0.19,0.11-0.39,0.14-0.6\r\n                                c0.02-0.21,0.07-0.41,0.14-0.6c0.61-1.08,1.15-2.13,1.63-3.15c0.48-1.02,0.94-1.99,1.39-2.92c0.54-0.89,1.02-1.77,1.45-2.65\r\n                                c0.42-0.88,0.84-1.73,1.25-2.56c0.54-0.89,0.98-1.79,1.31-2.7c0.33-0.91,0.72-1.83,1.16-2.75c0.66-1.82,1.27-3.94,1.82-6.34\r\n                                c0.11-3-0.43-5.53-1.64-7.6c-1.4-2.14-3.86-2.98-7.39-2.52c-0.97-0.03-1.84-0.02-2.62,0.03c-0.36,0.09-1.03,0.28-2,0.58\r\n                                c-0.85,0.56-1.71,1.04-2.56,1.43c-0.85,0.4-1.73,0.81-2.65,1.24c-1.44,0.67-2.87,1.46-4.28,2.35c0.45-1.25,0.9-2.47,1.33-3.67\r\n                                c0.44-1.2,0.85-2.49,1.24-3.86l2.77-7.63c0.27-0.44,0.47-0.86,0.61-1.24c0.14-0.38,0.3-0.81,0.47-1.29\r\n                                c0.76-0.59,1.54-1.18,2.35-1.75c0.8-0.58,1.65-1.19,2.54-1.84c1.22-0.97,2.39-1.95,3.52-2.96c1.12-1,2.31-2.04,3.57-3.1\r\n                                c1.25-1.06,2.41-2.08,3.47-3.05c1.06-0.97,2.11-1.86,3.17-2.67c0.16-0.16,0.39-0.34,0.69-0.56c0.3-0.22,0.63-0.53,0.99-0.94\r\n                                c0.46-0.37,0.93-0.77,1.41-1.2c0.48-0.42,0.9-0.84,1.27-1.25c0.5-0.47,0.96-0.93,1.39-1.37c0.43-0.44,0.88-0.85,1.34-1.22\r\n                                c0.73-0.82,1.31-1.37,1.74-1.65c0.83-1.11,1.78-2.29,2.83-3.53c1.05-1.25,2.16-2.58,3.33-4c1.26-1.39,2.5-2.84,3.7-4.36\r\n                                c1.2-1.52,2.47-3.06,3.8-4.64c2.51-3.32,4.61-6.41,6.3-9.27c0.88-1.52,1.65-2.96,2.29-4.3c0.65-1.34,1.23-2.57,1.75-3.68\r\n                                c0.21-0.58,0.36-1.44,0.46-2.6c-0.02-0.55-0.01-1.03,0.04-1.45c0.04-0.42,0.07-0.79,0.08-1.11l0.34-0.04l0-0.13\r\n                                c1.34,0.99,2.92,2.08,4.78,3.29c2.18,1.42,4.24,2.79,6.19,4.11l7.09,4.81c2.79,1.89,5.23,3.61,7.32,5.16\r\n                                c2.09,1.55,4.39,3.26,6.88,5.13c2.49,1.88,4.84,3.63,7.07,5.26c2.22,1.63,4.11,3.07,5.67,4.31s2.51,1.98,2.85,2.21\r\n                                c1.27,0.86,3.18,2.22,5.74,4.08c2.56,1.86,5.2,3.84,7.91,5.93c2.71,2.09,5.2,4.06,7.46,5.9c2.26,1.85,3.77,3.21,4.53,4.09\r\n                                c1.06,1.34,1.19,2.6,0.39,3.78c-3.78,4.84-7.4,9.35-10.86,13.54c-3.46,4.19-6.75,8.12-9.86,11.8c-0.8,0.81-1.55,1.69-2.25,2.63\r\n                                c-0.7,0.94-1.41,1.85-2.13,2.72l-10.01,14.48c-2.86,3.86-5.52,7.82-7.98,11.88c-2.46,4.07-4.69,8.32-6.71,12.74l-1.17,2.54\r\n                                c-0.12,0.54-0.3,1.03-0.54,1.48c-0.25,0.45-0.47,0.92-0.67,1.4c-2.56,5.04-3.77,9.59-3.62,13.64c0.15,4.05,0.83,7.54,2.06,10.46\r\n                                c1.39,3.41,3.4,6.44,6.04,9.09l0.67,0.64c1.01,0.69,2.17,0.79,3.48,0.33c0.71-0.14,1.33-0.27,1.85-0.41\r\n                                c0.52-0.14,0.93-0.42,1.22-0.84l0.39-0.85c0.94-0.47,2.19-0.95,3.75-1.43c1.56-0.48,2.94-0.88,4.13-1.17l0.43-0.63\r\n                                c3.72-2.03,7.44-4.11,11.15-6.21c2.36-1.34,4.52-2.61,6.53-3.84c-0.57,0.68-1.11,1.35-1.62,2.01c-0.94,1.21-1.81,2.42-2.6,3.63\r\n                                c-0.8,1.21-1.5,2.49-2.1,3.87c-0.61,1.38-1.22,2.8-1.86,4.29c-0.82,2-1.45,4.1-1.9,6.29c-0.15,1.09-0.29,2.17-0.4,3.22\r\n                                c-0.12,1.06-0.18,2.12-0.19,3.21c-0.4,5.37,1.48,10.25,5.65,14.62c0.31,0.41,0.55,0.76,0.71,1.04c0.16,0.28,0.32,0.56,0.48,0.84\r\n                                c0.32,0.56,0.49,0.91,0.5,1.05l0.69,0.61c0.98,0.59,1.59,1.13,1.83,1.63c0.25,0.49,0.77,0.75,1.56,0.77\r\n                                c0.44,0.12,0.73,0.17,0.88,0.16l0.99,0.27c0.14-0.01,0.25,0.02,0.33,0.09c0.23,0.2,0.56,0.29,0.99,0.27\r\n                                c0.22,0.06,0.44,0.04,0.65-0.04l0.33,0.09c0.29-0.02,1.26-0.04,2.92-0.07l2.24-0.68c1.21-0.29,2.06-0.56,2.55-0.8\r\n                                c0.48-0.39,0.87-0.52,1.17-0.4c0.15,0.13,0.51,0.04,1.07-0.28l0.41-0.46c0.5-0.1,0.71-0.11,0.65-0.04\r\n                                c-0.07,0.08,0.32-0.13,1.16-0.61c0.36,0.05,0.86-0.12,1.49-0.52l0.75-0.15l0.51-0.57c0.61-0.69,0.85-0.81,0.74-0.37\r\n                                c0.02,0.29,0.3,0.2,0.85-0.27c0.69-0.48,1.08-0.68,1.16-0.61c0.08,0.07,0.63-0.25,1.68-0.97l1.04-0.71l0.91-1.03\r\n                                c0.41-0.46,1.13-0.97,2.18-1.54l3.01-2.24l1.22,0.47c1.1,0.29,2.14,0.43,3.12,0.41c0.97-0.02,1.6-0.04,1.89-0.06\r\n                                c0.29-0.02,1.29-0.22,3-0.61c1.71-0.39,3.12-1.05,4.22-1.99c0.41-0.31,0.54-0.92,0.38-1.81c-0.16-0.89-0.78-1.27-1.86-1.14\r\n                                c-0.21,0.09-0.76,0.32-1.64,0.7c-0.88,0.38-2.08,0.65-3.58,0.81c-0.37-0.05-0.85-0.04-1.46,0.03c-0.61,0.07-1.24,0.09-1.89,0.06\r\n                                c1.95-2.36,3.36-4.79,4.22-7.3c0.42-1.4,0.82-2.62,1.19-3.65c0.37-1.03,0.67-1.99,0.91-2.87c0.37-1.03,0.58-1.66,0.65-1.88\r\n                                c-0.02-0.29,0.02-0.8,0.13-1.53l0.08-0.55l-0.04-0.65c0.23-0.88,0.33-1.75,0.28-2.62c0.22-1.17,0.2-2.07-0.05-2.71\r\n                                c0.18-0.52,0.08-1.02-0.31-1.5l-0.63-3.22c-0.3-1.36-1.05-2.97-2.24-4.85s-2.47-3.21-3.82-4c-0.38-0.34-0.79-0.57-1.23-0.68\r\n                                c-0.44-0.12-0.92-0.27-1.44-0.46l-0.83-1.14l-6.75-7.62l-0.11-0.1c-0.44-0.12-0.74-0.25-0.89-0.38c-1.2-0.65-1.93-0.9-2.21-0.73\r\n                                c-0.31-0.27-0.59-0.45-0.85-0.54c-0.26-0.09-0.5-0.17-0.72-0.23c-0.58,0.04-1.04,0.1-1.4,0.19c-0.56,0.32-1.02,0.53-1.37,0.63\r\n                                c-0.5,0.1-0.92,0.27-1.27,0.51c-1.53,1.11-3.04,2.27-4.54,3.45c-0.42,0.04-0.88,0.17-1.41,0.4c-1.02,0.42-2.26,1.06-3.71,1.92\r\n                                c-2.08,1.43-4.33,2.92-6.75,4.49c-2.16,1.37-4.77,2.93-7.81,4.69c-3.04,1.76-6.47,3.63-10.28,5.6c-0.25-0.17-0.6-0.44-1.03-0.79\r\n                                c-0.44-0.36-0.75-0.85-0.94-1.47c-0.19-0.62-0.17-1.53,0.09-2.72c0.25-1.19,0.93-2.7,2.05-4.53c0.34-0.51,0.65-1.01,0.93-1.5\r\n                                c0.27-0.49,0.55-0.95,0.84-1.37c0.71-0.87,1.42-1.78,2.13-2.72c0.7-0.94,1.4-1.92,2.08-2.93c1.14-1.32,2.23-2.74,3.26-4.26\r\n                                c1.03-1.52,2.02-3.07,2.97-4.65c1.03-1.52,2.04-3.05,3.03-4.6c0.99-1.55,1.99-3.15,2.99-4.82c0.2-0.48,0.42-0.89,0.65-1.23\r\n                                c0.23-0.34,0.49-0.72,0.77-1.14l9.89-14.56c0.54-0.99,1.11-1.9,1.68-2.75c0.57-0.84,1.17-1.73,1.81-2.66\r\n                                c0.8-1.18,1.58-2.32,2.32-3.42c0.74-1.1,1.6-2.18,2.58-3.25l0.52-0.76c0.31-0.28,0.7-0.76,1.16-1.43c0.2-0.11,0.38-0.29,0.56-0.55\r\n                                l6.52-7.42c0.23-0.34,0.44-0.56,0.64-0.67c0.63-0.56,1.24-1.19,1.84-1.9c0.6-0.7,1.2-1.41,1.8-2.11c0.54-0.62,1.11-1.28,1.71-1.98\r\n                                c0.6-0.7,1.17-1.36,1.71-1.98c0.37-0.37,0.79-0.88,1.25-1.56c0.31,0.09,0.72,0.3,1.23,0.65c0.39,0.15,1.75,1.1,4.07,2.86\r\n                                c2.32,1.76,4.96,3.83,7.91,6.2c2.95,2.37,5.82,4.82,8.62,7.33c2.79,2.52,4.86,4.6,6.21,6.25c0.39,0.51,0.83,0.59,1.31,0.24\r\n                                c0.48-0.35,0.78-0.79,0.9-1.33C795.69,129.4,795.82,128.69,795.59,128.04z M555.56,122.55c-0.55,0.61-1.25,1.29-2.09,2.05\r\n                                c-0.85,0.75-1.75,1.42-2.71,1.99c-0.96,0.57-1.96,0.96-2.99,1.15c-1.04,0.19-1.98,0.09-2.83-0.31c-0.28-0.16-0.55-0.33-0.83-0.5\r\n                                c-0.28-0.16-0.51-0.32-0.68-0.46l0.43-1.94c0.24-1.1,0.49-2.14,0.76-3.12c0.27-0.98,0.52-2.03,0.76-3.12\r\n                                c1.36-0.02,2.69,0.09,4,0.33c1.3,0.23,2.57,0.43,3.79,0.59c0.4,0.09,0.8,0.17,1.2,0.26c0.4,0.09,0.74,0.21,1.01,0.38\r\n                                C556.28,120.46,556.34,121.36,555.56,122.55z M567.18,95.95c-0.24,2.04-0.63,4.04-1.16,6.01c-0.54,1.97-1.12,3.93-1.76,5.88\r\n                                c-0.53,1.45-1.12,2.97-1.78,4.55s-1.74,2.68-3.23,3.29c-0.95,0.52-2.09,0.69-3.4,0.51c-1.32-0.18-2.49-0.33-3.5-0.45\r\n                                c-1.14-0.04-2.19-0.14-3.15-0.3c-0.96-0.16-2-0.31-3.11-0.45c0.33-1.5,0.53-3.12,0.6-4.88l0.52-2.39c0.21-0.48,0.4-0.98,0.57-1.52\r\n                                c0.17-0.54,0.37-1.09,0.6-1.67l0.65-2.99c0.77-3.07,1.11-6.03,1-8.87c-0.06-0.22-0.11-0.47-0.15-0.74\r\n                                c-0.05-0.27-0.09-0.57-0.12-0.89c0.94-0.94,2.1-1.84,3.49-2.68c1.38-0.85,2.79-1.43,4.22-1.74c1.43-0.32,2.81-0.32,4.16-0.03\r\n                                c1.35,0.29,2.5,1.12,3.45,2.48C567.05,91.06,567.75,93.35,567.18,95.95z M668.52,147.62c0.51-1.98,1.31-3.83,2.39-5.57\r\n                                s2.3-3.2,3.67-4.39c1.37-1.19,2.69-1.79,3.97-1.82l1.98,0.51c0.08,0.28,0.17,0.44,0.27,0.48c0.04,0.14,0.24,0.53,0.6,1.17\r\n                                c-0.01,0.46,0.04,0.97,0.15,1.54c0.1,0.57,0.19,1.34,0.27,2.3c0.12,0.87,0.19,1.74,0.2,2.6c0.01,0.87,0.05,1.78,0.13,2.74\r\n                                c-0.02,0.91-0.07,1.84-0.15,2.77c-0.08,0.93-0.18,1.83-0.28,2.7c-0.35,2-0.81,3.43-1.37,4.29c-0.47,0.91-0.87,1.56-1.2,1.96\r\n                                l-0.92,1.76c-1.32-0.34-2.74-0.93-4.25-1.78c-1.52-0.85-3.08-2.15-4.69-3.91c-0.45-0.46-0.74-1.13-0.86-2\r\n                                C667.97,151.39,668.01,149.6,668.52,147.62z M659.81,175.44c0.23-2.87,0.62-5.66,1.17-8.37c0.55-2.71,1.21-5.35,1.98-7.94l1.5-3.88\r\n                                c0.61,1.47,1.44,2.65,2.47,3.53c0.67,0.7,1.48,1.35,2.43,1.96c1.58,1.17,3.61,2.23,6.11,3.18c-0.28,0.32-0.51,0.6-0.7,0.84\r\n                                c-0.19,0.25-0.42,0.53-0.7,0.84c-0.05,0.09-0.35,0.45-0.91,1.08c-0.46,0.45-0.77,0.81-0.91,1.08c-0.19,0.13-0.37,0.32-0.56,0.57\r\n                                c-0.19,0.25-0.38,0.44-0.56,0.57c-0.47,0.45-0.79,0.86-0.98,1.22c-1.17,1.58-2.17,2.61-3,3.1c-0.97,0.53-2.08,1.33-3.33,2.41\r\n                                c-0.37,0.27-0.73,0.51-1.07,0.74c-0.35,0.22-0.71,0.47-1.07,0.74c-0.41,0.13-0.71,0.26-0.9,0.4c-0.22-0.23-0.42-0.51-0.6-0.83\r\n                                C659.84,176.04,659.71,175.63,659.81,175.44z M664.16,37.1c-0.06,1.06-0.45,2.28-1.16,3.65c-1.4,2.64-2.94,5.34-4.65,8.08\r\n                                c-1.71,2.75-3.54,5.5-5.52,8.25c-1.98,2.76-4.13,5.47-6.46,8.16c-2.33,2.68-4.81,5.39-7.43,8.13c-1.4,1.45-2.82,2.83-4.28,4.15\r\n                                c-1.46,1.32-2.91,2.63-4.37,3.95c-1.36,1.35-2.75,2.64-4.17,3.86c-1.42,1.22-2.76,2.36-4.01,3.43c-0.63,0.53-1.22,1.05-1.79,1.55\r\n                                c-0.56,0.5-1.14,0.97-1.73,1.41c0.2-0.25,0.42-0.71,0.67-1.39c0.89-1.85,1.71-3.75,2.48-5.7c0.76-1.95,1.54-3.86,2.33-5.75\r\n                                c0.28-0.77,0.54-1.33,0.77-1.67l4.88-10.28c0.82-1.66,1.61-3.32,2.39-5c0.77-1.67,1.6-3.27,2.48-4.8c1.79-3.15,3.7-6.15,5.71-9\r\n                                c0.37-0.41,0.77-0.86,1.22-1.35c0.45-0.49,0.87-0.99,1.27-1.49c0.4-0.51,0.82-0.98,1.25-1.42c0.43-0.44,0.85-0.91,1.25-1.42\r\n                                c0.64-0.85,1.25-1.5,1.84-1.94c0.5-0.47,1.17-0.82,2.01-1.06c2.12-0.75,3.75-2.11,4.9-4.08c0.15-1.03,1-1.26,2.54-0.71l1.29,0.47\r\n                                l6.32,0.99c-0.07,0.19-0.1,0.34-0.08,0.46C664.11,36.71,664.13,36.88,664.16,37.1z M749.82,209.5c-0.03-1.66,0.45-3.39,1.42-5.18\r\n                                c0.98-1.79,2.2-3.4,3.67-4.83c1.47-1.43,3.01-2.55,4.62-3.37c1.61-0.82,3.04-1.09,4.29-0.8l1.79,0.98\r\n                                c0.02,0.29,0.06,0.47,0.14,0.53c0.01,0.14,0.11,0.57,0.29,1.28c-0.12,0.44-0.2,0.95-0.23,1.53c-0.04,0.58-0.14,1.34-0.3,2.29\r\n                                c-0.09,0.87-0.24,1.73-0.44,2.57c-0.2,0.84-0.38,1.74-0.54,2.69c-0.24,0.88-0.51,1.77-0.82,2.65c-0.31,0.89-0.62,1.74-0.93,2.55\r\n                                c-0.83,1.86-1.62,3.13-2.37,3.83c-0.68,0.76-1.22,1.3-1.64,1.62l-1.32,1.49c-1.2-0.65-2.43-1.57-3.69-2.76\r\n                                c-1.27-1.19-2.47-2.83-3.6-4.93C749.84,211.09,749.73,210.37,749.82,209.5z M736.04,229.2c0.92-2.73,1.97-5.34,3.16-7.83\r\n                                c1.19-2.49,2.47-4.9,3.85-7.22l2.4-3.4c0.24,1.58,0.75,2.92,1.54,4.03c0.48,0.84,1.11,1.67,1.88,2.49\r\n                                c1.25,1.51,2.96,3.04,5.15,4.57c-0.35,0.24-0.64,0.45-0.88,0.65c-0.24,0.19-0.54,0.41-0.88,0.65c-0.07,0.08-0.45,0.35-1.14,0.83\r\n                                c-0.56,0.32-0.94,0.6-1.14,0.83c-0.21,0.09-0.44,0.22-0.68,0.42c-0.24,0.19-0.47,0.33-0.68,0.42c-0.56,0.32-0.97,0.64-1.24,0.94\r\n                                c-1.52,1.25-2.74,2.01-3.66,2.28c-1.07,0.28-2.34,0.79-3.81,1.53c-0.43,0.17-0.83,0.32-1.22,0.45c-0.39,0.13-0.8,0.28-1.22,0.45\r\n                                c-0.43,0.03-0.75,0.08-0.97,0.17c-0.16-0.28-0.29-0.6-0.38-0.95C735.93,229.78,735.9,229.35,736.04,229.2z\" mask=\"url('#drawing-letters')\" />\r\n                        </g>\r\n    \r\n                        <g id=\"group-underline\">\r\n                            <path fill=\"#E0CD1E\" d=\"M625.99,268.48c-2.78,1.82-5.39,3.61-7.65,5.36c-0.43,0.31-0.96,0.58-1.38,0.72\r\n                                c0.31,0.16-0.13,0.69-1.13,1.37c-19.72,13.29-42.6,25.33-66.43,35.24c-0.08,0.27-0.33,0.61-0.8,1\r\n                                c-1.45,1.25-4.73,2.8-8.33,3.84l-2.75,0.68c-11,3.05-22.13,5.64-33.4,7.45c-1.11,0.39-2.32,0.77-3.61,1.14\r\n                                c-1.3,0.35-2.69,0.65-4.14,0.93c-9.61,2.56-19.49,4.6-29.79,5.84c0.66,0.15,1.07,0.36,1.08,0.62\r\n                                c-0.16,0.66-2.55,1.22-5.37,1.29c-1.42,0.06-2.84,0.13-4.26,0.19c4.08-0.02,8.2,0.09,12.26-0.09c0.59-0.03,1.13-0.03,1.63-0.01\r\n                                c1.12-0.08,2.24-0.15,3.36-0.23c1.12-0.12,2.23-0.23,3.36-0.35c2.24-0.26,4.51-0.46,6.77-0.82c9.89-1.37,19.44-3.46,28.7-5.96\r\n                                c9.25-2.52,18.21-5.47,26.86-8.83c17.33-6.73,33.46-14.8,48.84-23.61c0.48-0.34,1.31-0.71,1.84-0.8\r\n                                c0.37-0.01,0.41,0.2-0.14,0.55c-9.39,6.2-18.27,12.08-27.88,17.68c-9.61,5.58-20,10.91-32.41,15.55\r\n                                c-14.75,5.56-30.1,9.93-46.07,12.99c-16,2.92-32.67,4.55-49.95,3.92c-4.5-0.28-8.95-0.88-13.38-1.35\r\n                                c-2.19-0.32-4.37-0.64-6.54-0.96l-3.26-0.48l-3.17-0.57c-2.11-0.38-4.22-0.77-6.32-1.15c-2.05-0.43-4.1-0.86-6.15-1.29\r\n                                l-3.07-0.64l-3-0.69l-5.99-1.39c-7.84-1.92-15.61-3.93-23.11-5.97c-3.72-1.01-7.47-2.02-11.25-3.04\r\n                                c-1.84-0.49-3.69-0.99-5.55-1.48c-1.86-0.5-3.72-1-5.54-1.46c-9.95-2.58-19.36-4.85-28.29-6.47c-2.2-0.36-4.4-0.72-6.6-1.08\r\n                                c-2.17-0.32-4.29-0.53-6.43-0.82c-4.22-0.42-8.33-0.78-12.45-0.79l-3.08-0.09c-1.03-0.04-2.08,0.06-3.11,0.07\r\n                                c-2.08,0.09-4.15,0.07-6.24,0.22l-6.3,0.53c-1.05,0.05-2.11,0.24-3.17,0.38l-3.19,0.43c-1.06,0.15-2.12,0.26-3.19,0.44\r\n                                l-3.22,0.6l-3.23,0.58l-1.62,0.29l-1.63,0.38c-2.17,0.49-4.35,0.98-6.52,1.48c-2.19,0.59-4.39,1.18-6.59,1.78\r\n                                c-1.65,0.49-3.29,0.98-4.89,1.46c-1.62,0.46-3.21,0.87-4.76,1.22c-3.11,0.75-6.08,1.4-8.74,1.74\r\n                                c-5.32,0.8-9.42,0.72-10.96-0.66c-1.83-1.68,0.5-4.78,5.73-8.24c-1.14,0.41-2.26,0.81-3.4,1.22l-5.52,1.6\r\n                                c-5.23,1.63-9.91,2.51-13.13,2.59l-4.38,0.21c-6.18-0.5-15.39,1.02-20.84,0.24l0.45-1.47l-1.13,0.16\r\n                                c-3.61,0.74-6.26,0.84-7.53,0.14l-0.29-1.4c0-1.75,0.97-3.91,3.01-6.41c-0.34-0.49-0.27-1.16,0.18-1.97\r\n                                c-2.86-0.23-4.58-1.07-3.49-3.4c-1.54,0.27-1.58-0.38-0.1-1.46c0.51-0.37,1.16-0.75,1.84-1.1c-0.01,0-0.02,0-0.02,0\r\n                                c-0.91,0.02-1.17,0.03-2.36,0.14c-1.42,0.52-2.24,0.82-2.24,0.82c-3.71,1.5-3.71,1.5-6.92,2.8c-2.9,0.85-4.83,1.06-4.83,1.06\r\n                                c-4.04-0.78-4.05-0.78-4.06-1.96c0.13-0.18,0.28-0.37,0.44-0.56c-2.52,0.85-2.7,0.9-3.39,1.12c-0.75,0.16-1.31,0.18-1.31,0.18\r\n                                c-0.36-0.47-0.36-0.47-0.86-0.45c-0.23-0.14-0.29-0.34-0.29-0.34c1.04-1.22,1.04-1.22,0.99-1.41c0.24-0.31,0.61-0.65,0.61-0.65\r\n                                c1.47-0.94,2.05-1.31,2.3-1.47c3.98-0.3,3.99-0.3,3.99-0.3c0.5-0.82,0.5-0.82,0.5-0.82c1.08,0.23,1.08,0.23,1.08,0.23\r\n                                c-0.71-0.35-0.71-0.35-0.71-0.35c1.86-0.48,1.86-0.48,1.86-0.48c-2.17,0.44-2.17,0.44-2.17,0.44c4.1-1.73,4.11-1.73,5.71-2.53\r\n                                c1.7-0.74,3.07-1.56,3.23-1.65c-0.22-0.11-0.29-0.23-0.29-0.23c4.42-1.83,4.44-1.82,8.77-3.55c0.45-0.06,0.82-0.08,1.17-0.09\r\n                                c0.34-0.34,1.1-0.82,1.97-1.15c0.77-0.3,1.53-0.61,2.29-0.91c0.16-0.1,0.3-0.2,0.44-0.3c-0.01-0.03-0.03-0.04-0.03-0.04\r\n                                c0.72-0.45,1.21-0.76,1.78-1.12c0.35-0.23,0.36-0.24,0.36-0.24s0.02,0,0.03,0c1.23-0.77,2.97-1.91,7.77-4.79\r\n                                c1.38-0.51,2.68-0.95,3.91-1.35c-0.42,0.07-0.82,0.14-1.22,0.21c-0.79,0.12-0.35-0.67-0.76-0.55\r\n                                c-10.07,2.93-20.46,7.24-30.64,11.41c-1.75,0.91-3.55,1.42-4.01,1.14c-0.43-0.3,0.66-1.28,2.45-2.21\r\n                                c9.4-6.16,20.54-12.06,32.42-16.98c11.88-4.92,24.49-8.81,36.38-11.19c3.08-0.79,6.15-1.61,9.31-2.27l4.71-1.05l2.36-0.53\r\n                                l2.4-0.45c-0.33-0.02-0.65-0.05-0.97-0.07c1.68-0.23,3.35-0.45,5.02-0.68c0.18-0.03,0.36-0.07,0.54-0.1\r\n                                c-1.32-0.05-2.64-0.1-3.95-0.16c-0.88,0.1-1.77,0.19-2.66,0.29c-14.73,3.16-28.02,5.94-41.66,10.07\r\n                                c-3.67,1.1-7.05,2.11-10.44,3.03c-3.38,0.94-6.64,1.93-10.07,2.99c-1.72,0.67-3.02,0.86-2.98,0.39\r\n                                c0.03-0.45,1.49-1.39,3.17-2.05c10.77-5.08,22.87-9.88,35-13.37c12.11-3.48,24.15-5.74,34.4-6.06c2.22-0.52,4.5-0.8,6.64-1.03\r\n                                c2.15-0.23,4.19-0.36,6.05-0.36c0.07-0.01,0.14-0.02,0.21-0.02c-1-0.12-1.93-0.23-2.93-0.34c3.43-0.43,5.39,0.06,8.57-0.04\r\n                                c-0.41-0.33-0.9-0.65-1.31-0.99c2.14-0.19,4.31-0.39,6.49-0.59c2.18-0.19,4.42-0.25,6.63-0.38c2.23-0.09,4.44-0.27,6.68-0.29\r\n                                c2.24,0.01,4.48,0.02,6.72,0.02c1.11,0.01,2.23,0.02,3.33,0.04c1.11,0.02,2.22,0.13,3.32,0.2c2.21,0.16,4.4,0.34,6.55,0.55\r\n                                c2.16,0.16,4.27,0.53,6.33,0.88c2.06,0.36,4.1,0.72,6.06,1.16c0.63,0.11,1.21,0.24,1.8,0.36c1.72,0.05,3.44,0.11,5.18,0.17\r\n                                c0.87,0.04,1.76,0.06,2.63,0.13c0.87,0.08,1.74,0.16,2.63,0.24c1.77,0.18,3.58,0.38,5.44,0.64c1.87,0.24,3.7,0.63,5.64,1.03\r\n                                c-1.29-0.35-2.56-0.7-3.84-1.05c-1.28-0.35-2.61-0.63-3.92-0.95c2.94,0.27,5.75,0.71,8.62,1.21c1.43,0.25,2.88,0.52,4.33,0.83\r\n                                c1.42,0.33,2.86,0.68,4.32,1.07c7.95,2.04,15.86,4.89,22.65,7.8c6.75,2.93,12.33,5.94,15.69,8.55\r\n                                c3.46,1.02,6.96,2.08,10.36,3.04l5.13,1.47l5.07,1.38l2.54,0.69l2.51,0.63l5.01,1.25l4.96,1.11c1.65,0.36,3.31,0.75,4.93,1.03\r\n                                l4.9,0.91c1.64,0.32,3.23,0.48,4.85,0.74c1.61,0.21,3.22,0.52,4.83,0.65l4.82,0.47c6.45,0.48,12.92,0.75,19.44,0.47\r\n                                c1.34-0.05,2.55,0.2,2.8,0.54c0.15,0.33-0.74,0.66-2.09,0.71c-9.4,0.66-18.85,0.49-28.28-0.57\r\n                                c-9.45-1.04-19.13-2.97-28.99-5.42c8.1,2.52,16.14,4.71,24.18,6.4c8.01,1.69,16.08,2.66,24.39,3.06\r\n                                c1.06,0.02,2.12,0.03,3.18,0.05c1.06,0.02,2.13-0.04,3.2-0.06c2.12-0.07,4.21,0.1,6.31,0.12c21.33-0.62,41.88-4.17,63.08-11.34\r\n                                c9.05-3.11,17.39-6.46,25.63-10.16c8.25-3.7,16.38-7.72,24.93-12.32c12-6.49,23.3-13.19,34.59-20.04\r\n                                c11.3-6.84,22.61-13.78,34.67-20.83c3.15-1.96,6.45-3.16,7.27-2.63c0.83,0.52-1.11,2.58-4.27,4.55\r\n                                c-24.49,15.88-48.42,31.24-73.69,44.13c-6.31,3.24-12.71,6.24-19.19,9.13c-6.5,2.81-13.06,5.5-19.75,7.87\r\n                                c-6.69,2.35-13.48,4.56-20.39,6.34c-3.44,0.97-6.93,1.71-10.43,2.54c-3.51,0.69-7.02,1.46-10.57,1.99\r\n                                c-1.53,0.24-3.05,0.52-4.57,0.73c-1.52,0.2-3.04,0.4-4.55,0.59l-2.26,0.3l-2.26,0.22c-1.5,0.15-3.01,0.29-4.51,0.43\r\n                                c0.09,0.11,0.17,0.22,0.18,0.33c0.04,0.46-0.49,0.99-1.42,1.41c1.72-0.11,3.44-0.29,5.16-0.42c1.73-0.14,3.45-0.28,5.18-0.49\r\n                                c1.73-0.19,3.47-0.38,5.2-0.57c1.74-0.24,3.48-0.47,5.22-0.71c19.09-4.41,37.65-10.91,57.47-18.16\r\n                                c3.42-1.21,6.74-2.51,10.04-3.68c3.27-1.27,6.52-2.41,9.72-3.67c6.42-2.41,12.69-4.94,19.03-7.54\r\n                                c15.25-8.27,30.13-17.29,45.27-26.56c0.58-0.41,1.27-0.69,1.57-0.68c0.31,0.02,0.06,0.36-0.53,0.77\r\n                                c-10.04,7.03-20.5,13.85-31.22,20.39c2-0.46,3.37-0.4,3.59,0.36c0.24,0.77-0.78,2.14-2.62,3.69l7.58-4\r\n                                c1.57-0.82,2.93-1.22,3.08-0.85c0.17,0.4-0.91,1.35-2.4,2.14c-10.29,5.53-20.66,10.82-31.17,15.76\r\n                                c-12.38,6.41-25,12.21-37.98,17.25c1.99-0.17,3.55-0.06,4.45,0.39c0,0,0.01,0.01,0.01,0.01c2.04-0.74,4.03-1.59,6.03-2.39\r\n                                c36.03-16.57,70.44-37.94,106.18-58.41c0.69-0.41,1.34-0.62,1.45-0.47c0.11,0.15-0.35,0.6-0.99,0.95\r\n                                c-10.79,6.17-21.46,12.43-32.1,18.62c0.02-0.01,0.03-0.01,0.05-0.02c0.49-0.15,0.67-0.02,0.26,0.37\r\n                                c-0.35,0.33-1.2,0.82-1.67,0.96c-0.56,0.17-0.61-0.03-0.27-0.36c-19.82,11.52-39.53,22.75-59.62,32.7\r\n                                c19.01-8.46,37.46-18.18,55.87-28.03c1.87-1.31,3.74-2.62,5.65-3.95c0.53-0.35,1.3-0.66,1.6-0.64\r\n                                c0.23,0.04-0.08,0.43-0.62,0.79c-0.53,0.37-1.06,0.73-1.58,1.1c3.48-1.89,6.51-2.73,6.92-1.88c0.29,0.95-2.3,3.29-5.9,5.28\r\n                                c-9.52,5.57-19.13,10.92-28.89,15.99l-3.1,1.77c-1,0.68-2,1.35-3,2.02c15.48-7.32,30.67-15.19,45.64-23.21\r\n                                c1.26-0.73,2.47-1.12,2.67-0.84c0.2,0.27-0.68,1.11-1.95,1.85c-25.28,16.05-51.74,31.39-80.16,43.52\r\n                                c-8.84,5.14-18,10-27.64,14.48c1.27-0.38,2.55-0.77,3.84-1.16c8.11-2.62,15.76-5.61,23-8.95c7.26-3.31,14.19-6.86,20.94-10.6\r\n                                c6.77-3.71,13.38-7.59,20.03-11.55c6.67-3.94,13.35-7.99,20.31-12.03c0.68-0.43,1.34-0.62,1.52-0.52\r\n                                c0.16,0.11-0.24,0.52-0.95,0.92c-6.76,4.02-13.16,8-19.64,11.91c-6.46,3.93-12.98,7.77-19.94,11.52\r\n                                c-11.54,6.21-22.79,11.69-34.03,16.89c23.62-8.91,44.48-20.82,65.65-32.97c0.9-0.57,1.89-1.01,2.57-1.18\r\n                                c0.01-0.11,0.16-0.29,0.42-0.49c2.47-1.85,5.23-3.73,8.06-5.62c0.53-0.38,1.28-0.71,1.67-0.71\r\n                                C626.84,267.71,626.57,268.05,625.99,268.48z M209.98,280.18c-0.26,0-0.47-0.01-0.66-0.01c0.68-0.1,1.41-0.2,2.22-0.32\r\n                                c0,0,0,0,3.35,0.42C214.89,280.27,212.43,280.22,209.98,280.18z M176.07,298.41c0.01,0,0.01,0,0.02-0.01\r\n                                c-1.1-0.02-1.9-0.03-1.9-0.03C174.96,298.39,175.57,298.4,176.07,298.41z M413.25,291.47c-11.65-2.57-23.27-6.34-34.94-10.85\r\n                                c2.96,0.85,5.84,1.63,8.75,2.42C395.88,286.1,404.57,288.99,413.25,291.47z M183.78,284.12c3.5-0.66,6.39-0.79,9.12-0.83\r\n                                c2.11-0.94,4.31-1.89,6.65-2.63c3.13-1.01,6.22-2.01,9.3-2.92c3.12-0.86,6.2-1.68,9.27-2.48c-0.92-0.23,0.54-0.62,1.29-0.86\r\n                                c0.77-0.24,1.53-0.49,2.29-0.73c-3.36,0.66-6.62,1.53-9.95,2.33c-3.34,0.77-6.62,1.71-9.95,2.63c-1.5,0.42-3.04,0.84-4.56,1.3\r\n                                c-1.52,0.48-3.05,0.96-4.57,1.45C189.61,282.32,186.6,283.25,183.78,284.12z M142.36,304.67c-0.19,0.03-0.37,0.05-0.58,0.08\r\n                                c0,0,0,0,0.79-1.18C142.57,303.57,142.48,304.04,142.36,304.67z M141.16,306.61c0.29-0.1,0.57-0.2,0.89-0.31\r\n                                C141.86,306.68,141.55,306.72,141.16,306.61z M149.3,303.7c-0.54,0.05-0.87,0.07-1.26,0.18\r\n                                C149.29,303.7,149.3,303.7,149.3,303.7z M163.86,320.41l1.44-4.67l-1.77,4.67L163.86,320.41z\" mask=\"url('#drawing-underline')\" />\r\n                        </g>\r\n    \r\n                        <g id=\"group-symbol\">\r\n                            <path fill=\"#E0CD1E\" d=\"M417.03,143.21c-1.06-1.21-2.12-2.42-3.17-3.63c-14.21-16.63-27.82-33.64-40.82-51.02\r\n                                c-0.98-1.29-1.97-2.57-2.95-3.86c-13.15-19.96-19.73-33.79-19.73-41.5c0-6.04,2.27-10.96,6.8-14.74c4.54-3.78,9.9-5.67,16.1-5.67\r\n                                c7.56,0,14.06,2.57,19.5,7.71c5.44,5.14,8.16,11.42,8.16,18.82c0,5.61-1.92,10.98-5.74,16.14c1.27,0.98,2.42,2.19,3.41,3.55\r\n                                c4.73-6.15,7.09-12.72,7.09-19.69c0-9.37-3.48-17.01-10.43-22.9c-6.96-5.9-15.27-8.84-24.95-8.84c-10.13,0-18.82,3.03-26.08,9.07\r\n                                c-7.56,6.5-11.34,14.74-11.34,24.72c0,11.79,5.9,25.78,17.69,41.95c0.76,1.36,1.51,2.72,2.27,4.08\r\n                                c14.06,20.71,30.39,41.27,48.98,61.68c1.13,1.13,2.27,2.27,3.4,3.4c15.57,15.73,24.72,25.17,27.44,28.35l17.01-17.46\r\n                                C434.87,160.37,423.98,150.32,417.03,143.21z\" mask=\"url('#drawing-yellow-1')\" />\r\n                            <path fill=\"#E0CD1E\" d=\"M445.6,104.21c-3.48,0-9.22,4.99-17.23,14.97c-5.69,7.11-11.25,14.46-16.08,22.18\r\n                                c-4.7,7.52-8.89,15.42-14.64,22.23c-8.23,9.74-19.97,18.44-32.55,21.34c-3.27,0.76-6.63,1.14-9.99,1.14\r\n                                c-11.79,0-21.54-3.63-29.25-10.89c-7.71-7.26-11.56-16.7-11.56-28.35c0-18.39,11.08-33.92,33.25-46.57\r\n                                c4.4-2.51,9.11-4.47,13.75-6.55c6.69-3.02,13.44-5.76,19.69-9.62c7.64-4.72,13.51-9.74,17.6-15.08c-0.98-1.36-2.13-2.57-3.4-3.54\r\n                                c-3.76,5.07-9.37,9.93-16.83,14.57c-5.41,3.36-11.12,6.21-16.92,8.8c-5.7,2.55-11.53,4.65-16.97,7.72\r\n                                c-23.13,13.04-34.7,29.8-34.7,50.29c0,13.31,4.34,23.96,13.04,31.97c8.69,8.02,19.76,12.02,33.22,12.02\r\n                                c8.06,0,16.12-2.14,23.24-5.82c10.43-5.4,19.67-13.89,26.54-23.37c7.44-10.26,12.61-21.95,20.57-31.87\r\n                                c2.76-3.44,5.72-6.72,8.85-9.82c1.6-1.58,3.24-3.11,4.92-4.59c1.49-1.31,3.33-2.88,4.98-4.14c2.42-2.12,3.63-3.4,3.63-3.85\r\n                                C448.78,105.27,447.72,104.21,445.6,104.21z\" mask=\"url('#drawing-yellow-2')\" />\r\n    \r\n                            <path fill=\"#1FB9DD\" d=\"M417.03,143.21c-1.06-1.21-2.12-2.42-3.17-3.63c-14.21-16.63-27.82-33.64-40.82-51.02\r\n                                c-0.98-1.29-1.97-2.57-2.95-3.86c-13.15-19.96-19.73-33.79-19.73-41.5c0-6.04,2.27-10.96,6.8-14.74c4.54-3.78,9.9-5.67,16.1-5.67\r\n                                c7.56,0,14.06,2.57,19.5,7.71c5.44,5.14,8.16,11.42,8.16,18.82c0,5.61-1.92,10.98-5.74,16.14c1.27,0.98,2.42,2.19,3.41,3.55\r\n                                c4.73-6.15,7.09-12.72,7.09-19.69c0-9.37-3.48-17.01-10.43-22.9c-6.96-5.9-15.27-8.84-24.95-8.84c-10.13,0-18.82,3.03-26.08,9.07\r\n                                c-7.56,6.5-11.34,14.74-11.34,24.72c0,11.79,5.9,25.78,17.69,41.95c0.76,1.36,1.51,2.72,2.27,4.08\r\n                                c14.06,20.71,30.39,41.27,48.98,61.68c1.13,1.13,2.27,2.27,3.4,3.4c15.57,15.73,24.72,25.17,27.44,28.35l17.01-17.46\r\n                                C434.87,160.37,423.98,150.32,417.03,143.21z\" mask=\"url('#drawing-blue-1')\" />\r\n                            <path fill=\"#1FB9DD\" d=\"M445.6,104.21c-3.48,0-9.22,4.99-17.23,14.97c-5.69,7.11-11.25,14.46-16.08,22.18\r\n                                c-4.7,7.52-8.89,15.42-14.64,22.23c-8.23,9.74-19.97,18.44-32.55,21.34c-3.27,0.76-6.63,1.14-9.99,1.14\r\n                                c-11.79,0-21.54-3.63-29.25-10.89c-7.71-7.26-11.56-16.7-11.56-28.35c0-18.39,11.08-33.92,33.25-46.57\r\n                                c4.4-2.51,9.11-4.47,13.75-6.55c6.69-3.02,13.44-5.76,19.69-9.62c7.64-4.72,13.51-9.74,17.6-15.08c-0.98-1.36-2.13-2.57-3.4-3.54\r\n                                c-3.76,5.07-9.37,9.93-16.83,14.57c-5.41,3.36-11.12,6.21-16.92,8.8c-5.7,2.55-11.53,4.65-16.97,7.72\r\n                                c-23.13,13.04-34.7,29.8-34.7,50.29c0,13.31,4.34,23.96,13.04,31.97c8.69,8.02,19.76,12.02,33.22,12.02\r\n                                c8.06,0,16.12-2.14,23.24-5.82c10.43-5.4,19.67-13.89,26.54-23.37c7.44-10.26,12.61-21.95,20.57-31.87\r\n                                c2.76-3.44,5.72-6.72,8.85-9.82c1.6-1.58,3.24-3.11,4.92-4.59c1.49-1.31,3.33-2.88,4.98-4.14c2.42-2.12,3.63-3.4,3.63-3.85\r\n                                C448.78,105.27,447.72,104.21,445.6,104.21z\" mask=\"url('#drawing-blue-2')\" />\r\n    \r\n                            <mask id=\"drawing-yellow-1\">\r\n                                <path className=\"mask-yellow-1\" ref={ (ref) => this.elements.and.yellow1 = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"26\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"\r\n                                    M452.71,193.22c-14.03-14.35-34.53-32.38-47.82-47.4c-8.56-9.68-15.92-20.35-24.34-30.14c-14.23-16.52-30.34-33.58-36.38-55.13\r\n                                    c-4.3-15.34,0.91-31.35,16.08-37.91c9.87-4.27,21.97-2.89,30.63,3.5c13.19,9.74,16.05,27.59,6.48,40.77\r\n                                    c-4.42,6.08-10.49,10.3-14.28,12.89\"/>\r\n                            </mask>\r\n                            <mask id=\"drawing-yellow-2\">\r\n                                <path className=\"mask-yellow-2\" ref={ (ref) => this.elements.and.yellow2 = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"15\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"\r\n                                    M403.79,54.18c-7,20.13-25.62,28.9-30,31.04c-12.58,6.17-19.49,8.5-29.63,14.25c-6.95,3.94-13.25,8.73-20.88,17.46\r\n                                    c-2.89,3.31-7.51,11.39-10.5,21.75c-1.36,4.73-1.87,11.85,1.5,22.71c0.7,2.27,2.94,9.09,10.13,15.92\r\n                                    c9.88,9.38,19.49,10.25,24.38,10.75c13.76,1.41,21.85-1.92,26.7-4.25c10.37-4.98,16.96-9.98,21.39-14.83\r\n                                    c11.45-12.55,9.67-15.58,23.25-34c1.82-2.47,7.5-12.57,18.83-23.08c4.59-4.26,13.58-10.17,21.75-11.17\"/>\r\n                            </mask>\r\n    \r\n                            <mask id=\"drawing-blue-1\">\r\n                                <path className=\"mask-blue-1\" ref={ (ref) => this.elements.and.blue1 = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"26\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"\r\n                                    M452.71,193.22c-14.03-14.35-34.53-32.38-47.82-47.4c-8.56-9.68-15.92-20.35-24.34-30.14c-14.23-16.52-30.34-33.58-36.38-55.13\r\n                                    c-4.3-15.34,0.91-31.35,16.08-37.91c9.87-4.27,21.97-2.89,30.63,3.5c13.19,9.74,16.05,27.59,6.48,40.77\r\n                                    c-4.42,6.08-10.49,10.3-14.28,12.89\"/>\r\n    \r\n                            </mask>\r\n                            <mask id=\"drawing-blue-2\">\r\n                                <path className=\"mask-blue-2\" ref={ (ref) => this.elements.and.blue2 = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"15\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"\r\n                                    M403.79,54.18c-7,20.13-25.62,28.9-30,31.04c-12.58,6.17-19.49,8.5-29.63,14.25c-6.95,3.94-13.25,8.73-20.88,17.46\r\n                                    c-2.89,3.31-7.51,11.39-10.5,21.75c-1.36,4.73-1.87,11.85,1.5,22.71c0.7,2.27,2.94,9.09,10.13,15.92\r\n                                    c9.88,9.38,19.49,10.25,24.38,10.75c13.76,1.41,21.85-1.92,26.7-4.25c10.37-4.98,16.96-9.98,21.39-14.83\r\n                                    c11.45-12.55,9.67-15.58,23.25-34c1.82-2.47,7.5-12.57,18.83-23.08c4.59-4.26,13.58-10.17,21.75-11.17\"/>\r\n    \r\n                            </mask>\r\n                        </g>\r\n    \r\n                        <mask id=\"drawing-letters\">\r\n                            <path id=\"mask-letters\" ref={ (ref) => this.elements.letters = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"42.5197\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"\r\n                                M15.28,91.96c11,18.55,23.22,37.27,39.88,61.63c11.28,16.5,17.03,21.99,21.75,27.13c12.38,13.47,11.79,15.06,19.75,26.63\r\n                                c7.36,10.7,8.79,17.63,14,18c5.89,0.42,11.05-7.93,14.5-13.5c2.59-4.19,7.68-12.42,7.5-22.5c-0.19-10.45-5.91-14.65-15.5-30\r\n                                c-1.82-2.91-22.55-36.39-16.5-42c3.06-2.84,13.27,1.14,20,7.5c11.91,11.24,6.59,23.92,19.5,39c1.16,1.36,10.46,12.23,15.5,10\r\n                                c6.31-2.79,2.65-24.66,1-34.5c-3.98-23.78-10.36-31.65-7.5-48c0.63-3.59,2.56-14.66,9-16.5c2.41-0.69,4.62,0.15,5.5,0.5\r\n                                c2.62,1.04,11.73,5.76,16.5,45c1.48,12.16,0.53,11.16,2,25.5c2.05,20.05,3.16,30.9,8,43.5c1.23,3.19,13.04,33.24,25.5,32\r\n                                c4.63-0.46,8.49-5.16,9.5-9.5c2.15-9.27-12.1-18.97-15-21c-5.37-3.75-7.24-3.38-11.5-7.5c-1.47-1.42-9.58-9.27-7.5-15\r\n                                c1.25-3.46,4.94-2.64,9-7.5c2.75-3.3,3.58-6.69,4.5-10.5c2.4-9.9-0.94-11.91,1.5-18c2.62-6.53,8.83-10.15,12-12\r\n                                c6.62-3.86,9.39-2.43,14-6.5c1.29-1.14,6.92-6.11,6-12c-0.93-5.95-8.16-10.53-14-10c-8.99,0.82-14.2,13.75-15,22.5\r\n                                c-0.84,9.16,2.32,23.04,14,28.5c7.38,3.45,17.36,3.16,24-2c13.12-10.2,1-29.98,9-41.5c23.76-34.22,215.73,18.02,239.5,7.5\r\n                                c8.6-3.8,13-9,13-9c4.5-5.31,4.25-9,8.5-14c1.75-2.06,10.01-10.93,14.5-9c4.61,1.98,3.38,14.57,2.67,20.67\r\n                                c-3.71,31.83-17.2,93.88-22,92.67c-5.59-1.42,2.59-88.11,36-102c2.53-1.05,11.78-4.9,18-0.67c6.79,4.62,6.86,16.74,4,24.67\r\n                                c-5.73,15.89-26.53,24.03-30.67,20c-3.06-2.98,1.52-14.06,4.67-14c5.53,0.1,1.12,34.37,21.33,48.67c5.78,4.09,14.91,7.49,20,4\r\n                                c7.05-4.84,3.52-21.03,2.67-26c-6.98-40.53,12.5-55.67,40-105.33c2.39-4.31,4.47-17.55,15.33-24.67c1.03-0.67,10.21-6.57,14.67-3.33\r\n                                c5.56,4.04,1.74,20.8-5.33,32.67c-4.43,7.44-6.27,6.46-14.67,17.33c-9.56,12.39-6.7,13.04-16.67,26.67\r\n                                c-5.71,7.8-10.69,13.12-14,23.33c-0.88,2.72-2.88,9.08-0.67,10.67c3.42,2.45,13.11-9.1,17.33-6.67c3.45,1.99,1.15,11.88,0,16.67\r\n                                c-4.7,19.65-14.24,30.67-12.67,32c1.53,1.29,11.29-8.5,23.33-18.67c26.78-22.63,28.66-22.45,29.33-22c6.03,4-25.08,51.12-16,58.67\r\n                                c4.63,3.85,18.34-3.75,26-12.67c9.16-10.68,13.35-27.56,8-32c-3.32-2.76-10.13-0.56-14,2.67c-5.96,4.97-7.29,14.34-4,19.33\r\n                                c5.28,8.01,23.59,6.54,36,0c14.01-7.39,15.74-18.74,28-37.33c18.84-28.58,42.34-43.62,43.33-42.67\r\n                                c2.15,2.06-88.88,91.1-74.67,110.67c2.29,3.16,8.41,6,14,6c5.64,0,9.07-2.91,22-10.67c9.93-5.96,11.6-8.03,12.67-7.33\r\n                                c2.6,1.7-11.49,18-17.33,44c-1.99,8.84-3.47,15.8,0,18.67c5.8,4.8,23.71-3.31,32.67-16.67c8.57-12.78,9.84-31.69,4-34.67\r\n                                c-5.85-2.98-21.71,8.58-20.67,18.67c0.94,9.09,15.56,16.41,26.67,14.67c26.58-4.16,48.27-62.55,30-87.33\r\n                                c-3.25-4.41-6.15-5.56-15.33-11.33c-19.66-12.35-25.27-18.94-50-38.67c-48.39-38.61-106.72-77.05-108-75.33\r\n                                c-1.04,1.39,38.86,23.83,35.33,46c-1.73,10.87-13.39,18.57-26,24\"/>\r\n                        </mask>\r\n    \r\n                        <mask id=\"drawing-underline\">\r\n                            <path id=\"mask-underline\" ref={ (ref) => this.elements.underline = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"85.0394\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" d=\"\r\n                                M690.32,200.56c-44.62,41.77-106.56,83.35-136.67,96.77c-31.53,14.06-83.04,23.38-115,23c-42-0.5-48.77-19.89-120.5-34.5\r\n                                c-14.17-2.89-32.03-2.97-62-1.5c-25.7,1.26-55.5-2-131.5,43\"/>\r\n                        </mask>\r\n    \r\n                    </svg>\r\n                </Link>\r\n            </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\n\r\nexport default Logo;","import Header from \"./Header\";\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"./Header.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__menu\">\r\n            \r\n                <Link to=\"/albums/\" className=\"header__link\">Альбомы</Link>\r\n                <Link to=\"/about\" className=\"header__link\">Обо мне</Link>\r\n            </div>\r\n            \r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport anime from \"animejs/lib/anime\";\r\nimport { getTotalLength } from \"../../utils\";\r\n\r\nimport \"./LoadingLine.css\"\r\n\r\nclass LoadingLine extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        \r\n        this.loadingLine = null;\r\n        this.loadingLineLength = null;\r\n        this.loadingLineThree = null;\r\n        this.loadingAnimation = null;\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const { countRequest } = this.props;\r\n\r\n\r\n\r\n        if(!!countRequest === true){\r\n            this.startAnimation();\r\n            console.log(\"componentDidMount\", \"startAnimation\");\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n        const { countRequest } = this.props;\r\n\r\n        \r\n\r\n        if(!!countRequest  === true && prevProps.countRequest !== countRequest){\r\n            this.startAnimation();\r\n            console.log(\"componentDidUpdate\", \"startAnimation\");\r\n        }\r\n\r\n        if(!!countRequest === false){\r\n            this.completeAnimation();\r\n            console.log(\"componentDidUpdate\", \"completeAnimation\");\r\n        }\r\n    }\r\n\r\n    startAnimation = () => {\r\n        const self = this;\r\n\r\n        this.loadingLineLength\t\t= getTotalLength(this.loadingLine);\r\n        this.loadingLineThree\t\t= this.loadingLineLength / 6;\r\n\r\n        if(this.loadingAnimation !== null){\r\n            this.loadingAnimation.pause(); \r\n        }\r\n\r\n        this.loadingAnimation = anime({\r\n            targets: self.loadingLine,\r\n            easing: \"easeInOutSine\",\r\n            duration: 1400,\r\n            strokeDasharray: [self.loadingLineLength + \" \" + self.loadingLineLength, self.loadingLineThree + \" \" + self.loadingLineLength],\r\n            strokeDashoffset: [self.loadingLineLength, -self.loadingLineLength],\r\n            loop: true\r\n        });\r\n    }\r\n\r\n    completeAnimation = () => {\r\n        const self = this;\r\n\r\n        // if(this.loadingAnimation !== null){\r\n        //     this.loadingAnimation.pause(); \r\n        // }\r\n\r\n        this.loadingAnimation.pause(); \r\n\r\n        this.loadingAnimation = anime({\r\n            targets: self.loadingLine,\r\n            easing: \"easeInOutSine\",\r\n            duration: 800,\r\n            strokeDasharray: self.loadingLineLength + \" \" + self.loadingLineLength,\r\n            strokeDashoffset: 0\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"loading-line\">\r\n                <svg version=\"1.1\" id=\"svg-loading-line\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"  \r\n                viewBox=\"0 0 1920 20\" >\r\n                    <linearGradient id=\"SVGID_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"0\" y1=\"10\" x2=\"1920\" y2=\"10\">\r\n                        <stop  offset=\"0.08\" stopColor=\"#E0CD1E\" />\r\n                        <stop  offset=\"0.92\" stopColor=\"#1FB9DD\" />\r\n                    </linearGradient>\r\n                    <rect fill=\"url(#SVGID_1_)\" width=\"1920\" height=\"20\" mask=\"url('#mask-loading-line')\" />\r\n                    <mask id=\"mask-loading-line\">\r\n                        <line id=\"path-loading-line\" ref={ (ref) => this.loadingLine = ref } fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"28.3465\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"10.63\" x2=\"1920\" y2=\"10\"/>\r\n                    </mask>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countRequest: state.photos.loading.count,\r\n        loadingAll: state.photos.loading.all,\r\n        loadingSingle: state.photos.loading.single,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoadingLine);","import LoadingLine from \"./LoadingLine\";\r\nexport default LoadingLine;","import Content from \"./Content\";\r\nexport default Content;","import React from \"react\";\r\n\r\nimport \"./Content.css\"\r\n\r\nconst Content = ({ children }) => {\r\n    return (\r\n        <main className=\"content\">\r\n            { children }\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Content;","import React from \"react\";\r\n\r\nimport errorSVG from \"./error.svg\";\r\nimport \"./ErrorIndicator.css\"\r\n\r\nconst ErrorIndicator = ({ statusError, textError }) => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n\t\t\t<h2 className=\"error-indicator__status\">{ statusError }</h2>\r\n\t\t\t<img className=\"error-indicator__img\" src={errorSVG} alt=\"error\" />\r\n\t\t\t<h2 className=\"error-indicator__text\">{ textError }</h2>\r\n\t\t</div>\r\n    );\r\n};\r\n\r\nErrorIndicator.defaultProps = {\r\n    statusError: null,\r\n    textError: \"Произошла какая-то ошибка...\"\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorIndicator from \"./ErrorIndicator\";\r\nexport default ErrorIndicator;","import React from \"react\";\r\n\r\nconst {\r\n    Provider: FirestoreServiceProvider,\r\n    Consumer: FirestoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport { FirestoreServiceProvider, FirestoreServiceConsumer };","import withFirestoreService from \"./withFirestoreService\";\r\n\r\nexport default withFirestoreService;","import React from \"react\";\r\n\r\nimport { FirestoreServiceConsumer } from \"../context\";\r\n\r\nconst withFirestoreService = () => (Wrapper) => {\r\n    return (props) => {\r\n        return (\r\n            <FirestoreServiceConsumer>\r\n                {\r\n                    (firestoreService) => {\r\n                        return <Wrapper {...props} {...firestoreService} />\r\n                    }\r\n                }\r\n            </FirestoreServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirestoreService;","// FETCH REQUEST\r\nconst loadingStartAll = () => {\r\n    return {\r\n        type: \"FETCH_REQUEST_ALL\"\r\n    };\r\n}\r\nconst loadingStartSingle = () => {\r\n    return {\r\n        type: \"FETCH_REQUEST_SINGLE\"\r\n    };\r\n}\r\nconst loadingStartAllAlbums = () => {\r\n    return {\r\n        type: \"FETCH_REQUEST_ALL_ALBUMS\"\r\n    };\r\n}\r\n\r\n// FETCH SUCCESS\r\nconst photosLoaded = (allPhotos) => {\r\n    return {\r\n        type: \"FETCH_All_PHOTOS_SUCCESS\",\r\n        payload: allPhotos\r\n    };\r\n}\r\nconst photoLoaded = (singlePhoto) => {\r\n    return {\r\n        type: \"FETCH_SINGLE_PHOTO_SUCCESS\",\r\n        payload: singlePhoto\r\n    };\r\n}\r\nconst albumsLoaded = (allAlbums) => {\r\n    return {\r\n        type: \"FETCH_All_ALBUMS_SUCCESS\",\r\n        payload: allAlbums\r\n    };\r\n}\r\n\r\n// FETCH ERROR\r\nconst photosError = (error) => {\r\n    return {\r\n        type: \"FETCH_All_PHOTOS_ERROR\",\r\n        payload: error\r\n    };\r\n}\r\nconst photoError = (error) => {\r\n    return {\r\n        type: \"FETCH_SINGLE_PHOTO_ERROR\",\r\n        payload: error\r\n    };\r\n}\r\nconst albumsError = (error) => {\r\n    return {\r\n        type: \"FETCH_All_ALBUMS_ERROR\",\r\n        payload: error\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nconst fetchAllPhotos = (method) => (dispatch) => {\r\n    dispatch(loadingStartAll());\r\n    method()\r\n        .then((querySnapshot) => {\r\n\r\n            let data = [];\r\n\r\n            if(querySnapshot.empty){\r\n                dispatch(photosError(\"Произошла ошибка при получении данных...\"));\r\n            }\r\n            else{\r\n                querySnapshot.forEach((doc) => {\r\n                    data.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                dispatch(photosLoaded(data));\r\n            }\r\n            \r\n        })\r\n        .catch(() => {\r\n            dispatch(photosError(\"Произошла ошибка при получении данных...\"));\r\n        });\r\n};\r\n\r\nconst fetchSinglePhoto = (id, method) => (dispatch) => {\r\n    dispatch(loadingStartSingle());\r\n    method(id)\r\n        .then((doc) => {\r\n            if (doc.exists) {\r\n                dispatch(photoLoaded(doc.data()));\r\n            } else {\r\n                dispatch(photoError(\"Такой фотографии не существует...\"))\r\n            }\r\n        }).catch(() => {\r\n            dispatch(photoError(\"Произошла ошибка при получении данных...\"))\r\n        });\r\n};\r\n\r\nconst fetchAllAlbums = (method) => (dispatch) => {\r\n    dispatch(loadingStartAllAlbums());\r\n    method()\r\n        .then((querySnapshot) => {\r\n\r\n            let data = [];\r\n\r\n            if(querySnapshot.empty){\r\n                dispatch(albumsError(\"Произошла ошибка при получении данных...\"));\r\n            }\r\n            else{\r\n                querySnapshot.forEach((doc) => {\r\n                    data.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                dispatch(albumsLoaded(data));\r\n            }\r\n            \r\n        })\r\n        .catch(() => {\r\n            dispatch(albumsError(\"Произошла ошибка при получении данных...\"));\r\n        });\r\n};\r\n\r\nconst fetchSingleAlbum = (album, method) => (dispatch) => {\r\n    dispatch(loadingStartAll());\r\n    method(album)\r\n        .then((querySnapshot) => {\r\n\r\n            let data = [];\r\n            \r\n            if(querySnapshot.empty){\r\n                dispatch(photosError(\"Произошла ошибка при получении данных...\"));\r\n            }\r\n            else{\r\n                querySnapshot.forEach((doc) => {\r\n                    data.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                dispatch(photosLoaded(data));\r\n            }\r\n            \r\n        })\r\n        .catch(() => {\r\n            dispatch(photosError(\"Произошла ошибка при получении данных...\"));\r\n        });\r\n};\r\n\r\nexport { fetchAllPhotos, fetchSinglePhoto, fetchAllAlbums, fetchSingleAlbum };","import React, { Component } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport withFirestoreService from \"../../hoc\";\r\n\r\nimport { fetchSinglePhoto } from \"../../store/actions\";\r\n\r\nimport anime from \"animejs/lib/anime\";\r\nimport { getTotalLength } from \"../../utils\";\r\n\r\nimport \"./MasonryDIViewBox.css\"\r\n\r\nclass MasonryDIViewBox extends Component {\r\n\r\n\tconstructor(){\r\n\t\tsuper()\r\n\r\n\t\tthis.state = {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\tready: false,\r\n\t\t\tresize: false\r\n\t\t};\r\n\r\n\t\tthis.params = null;\r\n\r\n\t\tthis.widthView\t\t= null;\r\n\t\tthis.heightView\t\t= null;\r\n\t\tthis.percentView\t= null;\r\n\t\tthis.factorView\t\t= null;\r\n\t\tthis.factorImg\t\t= null;\r\n\r\n\t\tthis.elements = {\r\n\t\t\trectY: null,\r\n\t\t\trectB: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.getSizePhoto();\r\n\r\n\t\twindow.addEventListener(\"resize\", this.resize);\r\n\r\n\t\tthis.params = this.props.match.params.props.split(\",\");\r\n\t\tthis.props.fetchPhoto();\r\n\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState){\r\n\t\tif(prevProps.loading !== this.props.loading){\r\n\t\t\tthis.setSize(this.percentView, this.factorView, this.params[2], false);\r\n\t\t}\r\n\t\tif(prevState.ready !== this.state.ready){\r\n\t\t\tthis.runAnimation(this.elements)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\twindow.removeEventListener(\"resize\", this.resize);\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps, nextState){\r\n\r\n\t\tif(nextProps.photo !== this.props.photo){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tif(nextState.ready !== this.state.ready){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif(nextState.resize && this.state.resize){\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\tgetSizePhoto = () => {\r\n\t\tthis.widthView = document.documentElement.clientWidth;\r\n\t\tthis.heightView = document.documentElement.clientHeight;\r\n\t\tthis.percentView = this.getPercent(this.widthView, this.heightView, 76);\r\n\t\tthis.factorView = this.getFactor(this.widthView, this.heightView);\r\n\t}\r\n\tresize = () => {\r\n\t\tthis.getSizePhoto();\r\n\t\t\r\n\t\tthis.setSize(this.percentView, this.factorView, this.params[2], true);\r\n\t\tthis.runAnimation(this.elements)\r\n\t}\r\n\r\n\tgetFactor = (width, height) => {\r\n\t\treturn width / height;\r\n\t}\r\n\r\n\tgetPercent = (width, height, percent) => {\r\n\t\treturn {\r\n\t\t\tpercentW: width / 100 * percent,\r\n\t\t\tpercentH: height / 100 * percent\r\n\t\t}\r\n\t}\r\n\r\n\tsetSize = (percentView, factorView, factorImg, resize) => {\r\n\r\n\t\tlet widthView, widthViewFactor,\r\n\t\t\theightView, heightViewFactor;\r\n\t\r\n\t\twidthView\t\t\t= percentView.percentW;\r\n\t\theightView\t\t\t= percentView.percentH;\r\n\t\twidthViewFactor\t\t= percentView.percentW / factorImg;\r\n\t\theightViewFactor\t= percentView.percentH * factorImg;\r\n\t\t\r\n\t\tif(factorView > factorImg){\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\twidth: heightViewFactor,\r\n\t\t\t\theight: heightView,\r\n\t\t\t\tready: true,\r\n\t\t\t\tresize\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(factorView < factorImg){\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\twidth: widthView,\r\n\t\t\t\theight: widthViewFactor,\r\n\t\t\t\tready: true,\r\n\t\t\t\tresize\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tif(factorView === factorImg){\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\twidth: widthView,\r\n\t\t\t\theight: widthView,\r\n\t\t\t\tready: true,\r\n\t\t\t\tresize\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trunAnimation = (elements) => {\r\n\t\tlet pathLength, path1, path2, half, third, dasharray;\r\n\r\n\t\tpath1 = elements.rectY;\r\n\t\tpath2 = elements.rectB;\r\n\t\t\r\n\t\tpathLength = getTotalLength(path1);\r\n\t\t\r\n\t\thalf = pathLength / 2;\r\n\t\tthird = pathLength / 3;\r\n\t\tdasharray = pathLength - third;\r\n\r\n\t\tanime({\r\n\t\t\ttargets: [path1, path2],\r\n\t\t\teasing: \"easeInOutSine\",\r\n\t\t\tduration: 1000,\r\n\t\t\tstrokeDasharray: function(i, x){\r\n\t\t\t\treturn x === 0 ? [pathLength, third + \" \" + dasharray] : [pathLength, third + \" \" + dasharray]\r\n\t\t\t},\r\n\t\t\tstrokeDashoffset: function(i, x){\r\n\t\t\t\treturn x === 0 ? 0 : half\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\tanime({\r\n\t\t\ttargets: [path1, path2],\r\n\t\t\teasing: \"linear\",\r\n\t\t\tdealy: 1200,\r\n\t\t\tduration: 16000,\r\n\t\t\tstrokeDashoffset: function(i, x){\r\n\t\t\t\treturn x === 0 ? [0, -pathLength] : [half, -pathLength + half]\r\n\t\t\t},\r\n\t\t\tloop: true\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst { history, photo: { src } } = this.props;\r\n\t\tconst { width, height, ready } = this.state;\r\n\r\n\t\tconst style = {\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\tready && <div className=\"masonry-di-viewbox\">\r\n\t\t\t\t<div className=\"masonry-di-viewbox__close\" onClick={ () => history.action === \"POP\" ? history.push(\"/\") : history.goBack() } ></div>\r\n\t\t\t\t<div className=\"masonry-di-viewbox__wrap\" style={ style } >\r\n\t\t\t\t\t<div className=\"masonry-di-viewbox__sqr masonry-di-viewbox__sqr--yellow\">\r\n\t\t\t\t\t\t<svg version=\"1.1\" id=\"sqrYellow\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox={`0 0 ${width} ${height}`} x=\"0px\" y=\"0px\" >\r\n\t\t\t\t\t\t\t<rect fill=\"none\" ref={ (ref) => this.elements.rectY = ref } stroke=\"#e0cd1e\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"  />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"masonry-di-viewbox__sqr masonry-di-viewbox__sqr--blue\">\r\n\t\t\t\t\t\t<svg version=\"1.1\" id=\"sqrBue\"  xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox={`0 0 ${width} ${height}`} x=\"0px\" y=\"0px\"   >\r\n\t\t\t\t\t\t\t<rect fill=\"none\" ref={ (ref) => this.elements.rectB = ref } stroke=\"#1fb9dd\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<figure className=\"masonry-di-viewbox__figure\">\r\n\t\t\t\t\t\t<img src={ src } alt=\"\" className=\"masonry-di-viewbox__image\" />\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tphoto: state.photos.singlePhoto,\r\n\t\tloading: state.photos.loading.single\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { match, getSinglePhoto }) => {\r\n\tconst { id } = match.params;\r\n\r\n\treturn {\r\n\t\tfetchPhoto: () => dispatch(fetchSinglePhoto(id, getSinglePhoto))\r\n\t}\r\n};\r\n\r\nexport default compose(\r\n\twithRouter,\r\n\twithFirestoreService(),\r\n\tconnect(mapStateToProps, mapDispatchToProps)\r\n)(MasonryDIViewBox);","import MasonryDIViewBox from \"./MasonryDIViewBox\";\r\nexport default MasonryDIViewBox;","/*\r\n*\tВспомогательный метод расчет ширины и высоты\r\n*/\r\nexport const getSize = (elem) => {\r\n\tlet box = elem.getBoundingClientRect();\r\n\r\n\treturn {\r\n\t\twidth: box.right - box.left,\r\n\t\theight: box.bottom - box.top\r\n\t}\r\n}\r\n\r\n/*\r\n*\tВспомогательный метод расчета количества изображений в строке\r\n*/\r\nexport const getAmountLine = (widthDocument, setting) => {\r\n\treturn Math.floor((widthDocument - (widthDocument * setting.gap / setting.width)) / setting.width);\r\n}\r\n\r\n/*\r\n** Создание позиций для плиток\r\n*/\r\nexport const createPositions = (elements, amountLine, gap, stopIter, stopWidth, stopHeights) => {\r\n\r\n    let sizes = {},\r\n        length\t\t\t\t= elements.length,\r\n\t\tpositions\t\t\t= [],\r\n\t\twidth\t\t\t\t= [],\r\n\t\theight\t\t\t\t= (!!stopHeights && !!stopHeights.length ) ? stopHeights : [],\r\n\t\tmaxWidth\t\t\t= 0,\r\n\t\tmaxHeight\t\t\t= 0,\r\n\t\tcurrentWidth\t\t= 0,\r\n\t\tcurrentHeight\t\t= 0,\r\n\t\tprevHeight\t\t\t= 0,\r\n\t\tnewWidth\t\t\t= stopWidth || 0,\r\n\t\tnewHeight\t\t\t= 0,\r\n\t\tx\t\t\t\t\t= stopIter || 0;\r\n\r\n\tfor(let i = 0; i < length; i++, x++){\r\n\r\n\t\tif(x === amountLine){\r\n\t\t\tx = 0;\r\n\t\t\tnewWidth = 0;\r\n\t\t}\r\n\r\n\t\tcurrentWidth = getSize(elements[i].current).width;\r\n\t\tcurrentHeight = getSize(elements[i].current).height;\r\n\t\tprevHeight\t= height[x] || 0;\r\n\r\n\t\tpositions[i] = {\r\n\t\t\twidth: currentWidth,\r\n\t\t\theight: currentHeight,\r\n\t\t\ttop: prevHeight,\r\n\t\t\tleft: newWidth\r\n\t\t};\r\n\t\r\n\t\tnewWidth = newWidth + currentWidth + gap;\r\n\t\tnewHeight = prevHeight + currentHeight + gap;\r\n\r\n\t\twidth[i] = newWidth;\r\n\r\n\t\theight[x] = newHeight;\r\n\t}\r\n\r\n\tmaxWidth\t= Math.max.apply(null, width);\r\n\tmaxHeight\t= Math.max.apply(null, height);\r\n\r\n\tmaxWidth\t= maxWidth.toFixed(0);\r\n\tmaxHeight\t= maxHeight.toFixed(0);\r\n\r\n\tsizes = {\r\n\t\twidth: maxWidth - gap,\r\n\t\theight: maxHeight - gap,\r\n\t\tpositions: positions,\r\n\t\tstopIter: x,\r\n\t\tstopWidth: newWidth,\r\n\t\tstopHeights: height\r\n\t};\r\n\t\r\n\treturn sizes;\r\n\r\n}","import MasonryDIItem from \"./MasonryDIItem\";\r\nexport default MasonryDIItem;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MasonryDIItem.css\"\r\n\r\nclass MasonryDIItem extends Component {\r\n    \r\n    shouldComponentUpdate(nextProps){\r\n\r\n        if(nextProps.shouldUpdate !== this.props.shouldUpdate){\r\n            return true;\r\n        }\r\n\r\n        if(nextProps.resize !== this.props.resize){\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n\r\n        const { item, itemRef, width, factor, top, left }  = this.props;\r\n        const { hash = null, title, width: w, height: h, color, src, description } = item;\r\n        const styleItem = {\r\n            width,\r\n            top, \r\n            left\r\n        };\r\n\r\n        const height = width / factor;\r\n\r\n        const styleFigure = {\r\n            width,\r\n            height,\r\n            backgroundColor: color\r\n        };\r\n\r\n        const styleImage = {\r\n            width,\r\n            height\r\n        };\r\n\r\n        const path = !!hash ? `${hash}/` : `photo/${item.id}/size/${w},${h},${factor}`;\r\n\r\n        return (\r\n            <div className=\"masonry-di__item\" ref={ itemRef } style={ styleItem } >\r\n\t\t\t\t<Link to={ path } className=\"masonry-di__link\" >\r\n\t\t\t\t\t<figure className=\"masonry-di__figure\" style={ styleFigure } >\r\n\t\t\t\t\t\t<img src={ src } style={ styleImage }  className=\"masonry-di__image\" alt=\"Lide & photo\" />\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t\t<div className=\"masonry-di__content\">\r\n\t\t\t\t\t\t<img src={ `${process.env.PUBLIC_URL}/img/@1x/and.png` } srcSet={ `${process.env.PUBLIC_URL}/img/@2x/and.png` } alt=\"&\" />\r\n\t\t\t\t\t\t<h3>{ title }</h3>\r\n\t\t\t\t\t\t<p>{ description }</p>\r\n\t\t\t\t\t</div>\r\n                </Link>\r\n\t\t\t</div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default MasonryDIItem;","import React, { Component } from \"react\";\r\n\r\nimport { createPositions, getAmountLine } from \"./lib\"\r\nimport MasonryDIItem from \"./masonry-di-item\";\r\n\r\nimport \"./MasonryDI.css\"\r\n\r\nclass MasonryDI extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.factor                     = [];\r\n        this.elementsRef                = [];\r\n        this.containerRef               = null;\r\n        this.widthDocument          \t= 0;\r\n        this.amountLine                 = 0;\r\n        this.oldAmountLine              = 0;\r\n        this.defaultWidth               = this.props.width;\r\n        this.setting = {\r\n            width: this.props.width,\r\n            gap: this.props.gap,\r\n            responsive: this.props.responsive\r\n        };\r\n\r\n        this.state = {\r\n            positions: null,\r\n            widthContainer: 0,\r\n            heightContainer: 0,\r\n            resize: false,\r\n            stopIter: null,\r\n            stopWidth: null,\r\n            stopHeights: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadMasonryDI();\r\n        window.addEventListener(\"resize\", this.resizeMasonryDI);\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n\r\n        if(!!prevProps.data && prevProps.data !== this.props.data){\r\n\r\n            const currentRef = this.elementsRef.slice(prevProps.data.length);\r\n            const sizes = createPositions(currentRef, this.amountLine, this.setting.gap, this.state.stopIter, this.state.stopWidth, this.state.stopHeights);\r\n\r\n            this.setState( ( { positions } ) => {\r\n                return {\r\n                    positions: [...positions, ...sizes.positions],\r\n                    heightContainer: sizes.height\r\n                };\r\n            });\r\n        }\r\n\r\n        if(this.state.resize){\r\n\r\n            const sizes = createPositions(this.elementsRef, this.amountLine, this.setting.gap);\r\n\r\n            this.setState({\r\n                positions: sizes.positions,\r\n                widthContainer: sizes.width,\r\n                heightContainer: sizes.height,\r\n                resize: false,\r\n                stopIter: sizes.stopIter,\r\n                stopWidth: sizes.stopWidth,\r\n                stopHeights: sizes.stopHeights\r\n            });\r\n\r\n       }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.resizeMasonryDI);\r\n    }\r\n    \r\n    loadMasonryDI(){\r\n        this.widthDocument = document.documentElement.clientWidth - this.setting.gap;\r\n\r\n        this.setResponse(this.widthDocument, this.setting.responsive);\r\n        this.amountLine = getAmountLine(this.widthDocument, this.setting);\r\n        this.amountLine = this.amountLine < 1 ? 1 : this.amountLine;\r\n\r\n        this.oldWidthItem = this.setting.width;\r\n        this.oldAmountLine = this.amountLine; \r\n\r\n        this.setState({\r\n            resize: true\r\n        });\r\n\r\n    }\r\n\r\n    resizeMasonryDI = (e) => {\r\n\r\n        this.widthDocument = document.documentElement.clientWidth - this.setting.gap;\r\n\r\n        this.setResponse(this.widthDocument, this.setting.responsive);\r\n\r\n        this.amountLine = getAmountLine(this.widthDocument, this.setting);\r\n        this.amountLine = this.amountLine < 1 ? 1 : this.amountLine;\r\n\r\n        if(this.oldAmountLine !== this.amountLine || this.oldWidthItem !== this.setting.width){\r\n\r\n            this.oldWidthItem = this.setting.width;\r\n            this.oldAmountLine = this.amountLine; \r\n\r\n            this.setState({\r\n                resize: true\r\n            });\r\n        }        \r\n\r\n    }\r\n\r\n    setResponse(w, breakpoints){\r\n\t\t\r\n\t\tlet i, status;\r\n        this.setting.width = this.defaultWidth;\r\n\r\n        if(!!breakpoints && !!breakpoints.length){\r\n            i = breakpoints.length;\r\n            while(i--){\r\n                status = w < breakpoints[i].media;\r\n                if(status){\r\n                    this.setting.width = breakpoints[i].widthItem;\r\n                    break;\r\n                }\r\n            }\r\n\t\t}\r\n    }\r\n\r\n    render(){\r\n\r\n        const { data } = this.props;\r\n        const { widthContainer, heightContainer } = this.state;\r\n\r\n        if(!data){\r\n            return null;\r\n        }\r\n\r\n        const styleContainer = {\r\n            width: widthContainer,\r\n            height: heightContainer\r\n        };\r\n\r\n        const items = data.map((item, i) => {\r\n\r\n            const ref = React.createRef();\r\n            this.elementsRef[i] = ref;\r\n\r\n            this.factor[i] = item.width / item.height;\r\n\r\n            let top = null,\r\n                left = null;\r\n\r\n            if(!!this.state.positions && !!this.state.positions[i]){\r\n                top = this.state.positions[i].top;\r\n                left = this.state.positions[i].left;\r\n            }\r\n\r\n            return (\r\n                <MasonryDIItem\r\n                        key={i}\r\n                        item={ item }\r\n                        itemRef={ ref }\r\n                        width={ this.setting.width }\r\n                        factor={ this.factor[i] }\r\n                        top={ top }\r\n                        left={ left }\r\n                        resize={ this.state.resize }\r\n                        shouldUpdate={ top !== null && left !== null } />\r\n            )\r\n            \r\n        });\r\n\r\n        return (\r\n            <div className=\"masonry-di\" style={ styleContainer } ref={ (ref) => this.containerRef = ref }>\r\n                { items }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nMasonryDI.defaultProps = {\r\n    width: 200,\r\n    gap: 15\r\n};\r\n\r\nexport default MasonryDI;","import MasonryDI from \"./MasonryDI\";\r\nexport default MasonryDI;","import React, { Component, Fragment } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, withRouter } from \"react-router-dom\";\r\n\r\nimport ErrorIndicator from \"../../error-indicator\";\r\n\r\nimport MasonryDIViewBox from './../../masonry-di-viewbox';\r\nimport MasonryDI from './../../masonry-di';\r\n\r\nimport withFirestoreService from \"../../../hoc\";\r\n\r\nimport { fetchAllPhotos } from \"../../../store/actions\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchPhotos();\r\n    }\r\n\r\n    render(){\r\n\r\n        const { photos, error, loading, match } = this.props;\r\n        const { text, status } = error;\r\n        \r\n        if(loading){\r\n            return null;\r\n        }\r\n\r\n        if(status){\r\n            return <ErrorIndicator textError={ text } />\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Route path=\"/photo/:id/size/:props\" component={ MasonryDIViewBox } />\r\n                <MasonryDI\r\n                    data={ photos }\r\n                    width={ 300 } />\r\n            </Fragment>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photos: state.photos.allPhotos,\r\n        loading: state.photos.loading.all,\r\n        error: state.photos.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchAllPhotos(ownProps.getAllPhotos))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withFirestoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Home);","import Home from \"./Home\";\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport withFirestoreService from \"../../../../hoc\";\r\n\r\nimport MasonryDI from './../../../masonry-di';\r\n\r\nimport ErrorIndicator from \"../../../error-indicator\";\r\n\r\nimport { fetchSingleAlbum } from \"../../../../store/actions\";\r\n\r\n\r\nclass Album extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchPhotos();\r\n    }\r\n\r\n    render(){\r\n\r\n        const { photos, loading, error } = this.props;\r\n        const { text, status } = error;\r\n\r\n        if(loading){\r\n            return null;\r\n        }\r\n\r\n        if(status){\r\n            return <ErrorIndicator textError={ text } />\r\n        }\r\n\r\n        return (\r\n            <div className=\"album\" >\r\n                <MasonryDI \r\n                    data={ photos }\r\n                    width={ 300 } />\r\n            </div>    \r\n        )\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photos: state.photos.allPhotos,\r\n        loading: state.photos.loading.all,\r\n        error: state.photos.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\r\n    const { match, getSingleAlbum } = ownProps;\r\n    const { params: { album } } = match;\r\n\r\n    return {\r\n        fetchPhotos: () => dispatch(fetchSingleAlbum(album, getSingleAlbum))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withFirestoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Album);","import Album from './Album';\r\n\r\nexport default Album;","import React, { Component } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Route } from \"react-router-dom\";\r\n\r\nimport Album from './album';\r\nimport MasonryDI from './../../masonry-di';\r\nimport MasonryDIViewBox from './../../masonry-di-viewbox';\r\nimport ErrorIndicator from \"../../error-indicator\";\r\n\r\nimport { fetchAllAlbums } from \"../../../store/actions\";\r\n\r\nimport withFirestoreService from \"../../../hoc\";\r\n\r\nimport \"./Albums.css\"\r\n\r\n\r\n\r\nclass Albums extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchAllAlbums();\r\n    }\r\n\r\n    hasAlbum = () => {\r\n        const { name: albumName } = this.props.match.params;\r\n\r\n        return albumName;\r\n    }\r\n\r\n    render(){\r\n\r\n        const { albums, error, loading, match } = this.props;\r\n        const { text, status } = error;\r\n        const { album } = match.params;\r\n        \r\n        if(loading){\r\n            return null;\r\n        }\r\n\r\n        if(status){\r\n            return <ErrorIndicator textError={ text } />\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"albums\">\r\n                <Route path={`${match.url}/photo/:id/size/:props`} render={() => {\r\n                    return <MasonryDIViewBox />\r\n                }} />\r\n\r\n                { album && <Album /> }\r\n                {\r\n                    !album && <MasonryDI\r\n                                    data={ albums }\r\n                                    width={ 300 } />\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        albums: state.photos.allAlbums,\r\n        loading: state.photos.loading.allAlbums,\r\n        error: state.photos.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { getAllAlbums }) => {\r\n\r\n    return {\r\n        fetchAllAlbums: () => dispatch(fetchAllAlbums(getAllAlbums))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withFirestoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Albums);","import Albums from \"./Albums\";\r\nexport default Albums;","import AboutMe from \"./AboutMe\";\r\n\r\nexport default AboutMe;","import React from \"react\";\r\n\r\nimport \"./AboutMe.css\"\r\n\r\nconst AboutMe = () => {\r\n    return <p>About me page</p>;\r\n};\r\n\r\nexport default AboutMe;","import NotFound from \"./NotFound\";\r\nexport default NotFound;","import React from \"react\";\r\n\r\nimport ErrorIndicator from \"../../error-indicator\";\r\n\r\nimport \"./NotFound.css\"\r\n\r\nconst NotFound = () => {\r\n    return <ErrorIndicator statusError={ 404 } textError={ \"Страница не найдена\" } />;\r\n};\r\n\r\nexport default NotFound;","import React, { Fragment } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Logo from './../logo';\r\nimport Header from './../header';\r\nimport LoadingLine from './../loading-line';\r\nimport Content from './../content';\r\n\r\nimport Home from './../pages/home';\r\nimport Albums from './../pages/albums';\r\nimport AboutMe from './../pages/about-me';\r\nimport NotFound from './../pages/not-found';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <LoadingLine />\r\n            <Logo />\r\n            <Header />\r\n            <Content>\r\n                <Switch>\r\n                    <Route path=\"/\" component={ Home } exact />\r\n                    <Route path=\"/photo\" component={ Home } />\r\n                    <Route path=\"/albums/:album?\" component={ Albums } />\r\n                    <Route path=\"/about\" component={ AboutMe } />\r\n                    <Route component={ NotFound } />\r\n                </Switch>\r\n            </Content>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\"\r\n\r\nexport default App;","import ErrorBoundry from \"./ErrorBoundry\";\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\n\r\nimport ErrorIndicator from './../error-indicator';\r\n\r\nimport \"./ErrorBoundry.css\"\r\n\r\nclass ErrorBoundry extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            isError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({\r\n            isError: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isError){\r\n            return <ErrorIndicator textError={\"Произошла ошибка в приложении\"} />;\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n   \r\n};\r\n\r\nexport default ErrorBoundry;","import firebaseConfig from \"./fbConfig\";\r\n\r\nexport default firebaseConfig;","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyDgjDCrysXN-9RafkbTiJxSH8zci6KjgkU\",\r\n    authDomain: \"life-and-photo.firebaseapp.com\",\r\n    databaseURL: \"https://life-and-photo.firebaseio.com\",\r\n    projectId: \"life-and-photo\",\r\n    storageBucket: \"life-and-photo.appspot.com\",\r\n    messagingSenderId: \"822038374906\",\r\n    appId: \"1:822038374906:web:afde3e8ff1904058\"\r\n  };\r\n\r\n\r\nexport default firebaseConfig;","import FirestoreService from \"./firestore-service\";\r\n\r\nexport default FirestoreService;","import firebaseConfig from \"./config\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport \"firebase/firestore\";\r\n\r\nexport default class FirestoreService {\r\n\r\n    constructor(){\r\n\r\n        // Initialize Firebase\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.db = firebase.firestore();\r\n\r\n    }\r\n\r\n    getAllPhotos = async () => {\r\n        return await this.db.collection(\"photos\").get();\r\n    }\r\n    getSinglePhoto = async (id) => {\r\n        return await this.db.collection(\"photos\").doc(id).get();\r\n    }\r\n\r\n    getAllAlbums = async () => {\r\n        return await this.db.collection(\"albums\").get();\r\n    }\r\n    getSingleAlbum = async (album) => {\r\n        return await this.db.collection(\"photos\").where(\"albumHash\", \"==\", `${album}`).get();\r\n    }\r\n\r\n};","const initialState = {\r\n    allPhotos: [],\r\n    singlePhoto: {},\r\n    allAlbums: [],\r\n    loading: {\r\n        all: true,\r\n        single: true,\r\n        allAlbums: true,\r\n        count: 0\r\n    },\r\n    error: {\r\n        text: null,\r\n        status: false\r\n    }\r\n};\r\n\r\nconst firestoreReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        // FETCH REQUEST\r\n        case \"FETCH_REQUEST_ALL\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    all: true,\r\n                    count: state.loading.count + 1\r\n                }\r\n            }\r\n        case \"FETCH_REQUEST_SINGLE\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    single: true,\r\n                    count: state.loading.count + 1\r\n                }\r\n            }\r\n        case \"FETCH_REQUEST_ALL_ALBUMS\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    allAlbums: true,\r\n                    count: state.loading.count + 1\r\n                }\r\n            }\r\n\r\n        // FETCH SUCCESS\r\n        case \"FETCH_All_PHOTOS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    all: false,\r\n                    count: state.loading.count - 1\r\n                },\r\n                allPhotos: action.payload\r\n            }\r\n        case \"FETCH_SINGLE_PHOTO_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    count: state.loading.count - 1,\r\n                    single: false\r\n                },\r\n                singlePhoto: action.payload\r\n            }\r\n        case \"FETCH_All_ALBUMS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    allAlbums: false,\r\n                    count: state.loading.count - 1\r\n                },\r\n                allAlbums: action.payload\r\n            }\r\n\r\n        // FETCH ERROR\r\n        case \"FETCH_All_PHOTOS_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    count: state.loading.count - 1,\r\n                    all: false\r\n                },\r\n                error: {\r\n                    text: action.payload,\r\n                    status: true\r\n                }\r\n            }\r\n        case \"FETCH_SINGLE_PHOTO_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    count: state.loading.count - 1,\r\n                    single: false\r\n                },\r\n                error: {\r\n                    text: action.payload,\r\n                    status: true\r\n                }\r\n            }\r\n        case \"FETCH_All_ALBUMS_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    allAlbums: false,\r\n                    count: state.loading.count - 1\r\n                },\r\n                error: {\r\n                    text: action.payload,\r\n                    status: true\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n};\r\n\r\nexport default firestoreReducer;","import { combineReducers } from \"redux\";\r\nimport firestoreReducer from \"./firestoreReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunkMiddleware))   \r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\n\r\nimport { FirestoreServiceProvider } from \"./context\";\r\nimport FirestoreService from \"./services\";\r\n\r\n// import firebaseConfig from \"./config\";\r\n\r\n// import firebase from 'firebase/app';\r\n// import 'firebase/auth';\r\n// import \"firebase/firestore\";\r\n\r\n// import { ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\n// import { createFirestoreInstance } from \"redux-firestore\";\r\n\r\nimport store from \"./store\";\r\n\r\nimport './index.css';\r\n\r\n// Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n// firebase.firestore();\r\n\r\n// const rrfConfig = {\r\n//     userProfile: 'users',\r\n//     useFirestoreForProfile: true\r\n// };\r\n\r\n// const rrfProps = {\r\n//     firebase,\r\n//     config: rrfConfig,\r\n//     dispatch: store.dispatch,\r\n//     createFirestoreInstance\r\n// };\r\n\r\nconst firestoreService = new FirestoreService()\r\n\r\nReactDOM.render(\r\n    <Provider store={ store } >\r\n        {/* <ReactReduxFirebaseProvider {...rrfProps} > */}\r\n        <FirestoreServiceProvider value={ firestoreService } >\r\n            <ErrorBoundry>\r\n                <Router>\r\n                    <App />\r\n                </Router>\r\n            </ErrorBoundry>\r\n        </FirestoreServiceProvider>\r\n        {/* </ReactReduxFirebaseProvider> */}\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}