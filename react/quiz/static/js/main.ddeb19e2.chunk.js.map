{"version":3,"sources":["field/Field.js","field/index.js","store/actions/index.js","tag/index.js","tag/Tag.js","tags/Tags.js","tags/index.js","option/index.js","option/Option.js","options/index.js","options/Options.js","files/index.js","files/Files.js","App.js","store/reducers/form.js","store/reducers/index.js","store/index.js","index.js"],"names":["addTag","value","Field","connect","form","formOptions","formCountTagsActive","formValues","formValid","dispatch","formChange","data","type","payload","props","checkValid","attr","error","name","onChange","e","target","files","isFile","getCheckbox","checked","isChecked","validationForm","typeField","length","fieldValid","Object","values","every","el","validateForm","validateField","className","Tag","forId","id","htmlFor","tags","Tags","map","tag","idx","key","Option","onClick","Options","formAddOption","option","item","i","arr","opt","placeholder","Files","multiple","formSubmit","message","submit","isSubmit","title","discuss","question","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","response","ok","console","log","onSubmit","Container","Row","Col","md","span","offset","xs","disabled","initialState","formReducer","state","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddeb19e2.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { formChange } from \"../store/actions\";\r\n\r\nconst getCheckbox = (target) => {\r\n    return target.type === \"checkbox\" ? true : false;\r\n}\r\n\r\nconst isChecked = (target) => {\r\n    return getCheckbox(target) ?  target.checked : target.value;\r\n};\r\n\r\nconst isFile = (target) => {\r\n    return target.type === \"file\" ? target.files : false;\r\n};\r\n\r\nconst isType = (target) => {\r\n    return isFile(target) || isChecked(target);\r\n};\r\n\r\nconst addTag = (value) => {\r\n    if(typeof value === \"boolean\"){\r\n        return value ? 1 : -1;\r\n    }\r\n    return 0;\r\n};\r\n\r\nconst Field = (props) => {\r\n\r\n    const validateField = ({ typeField, name, length, ...data }) => {\r\n    \r\n        let fieldValid = false;\r\n        let error = \"\";\r\n    \r\n        if(typeField === \"text\"){\r\n            fieldValid = !(length < 1);\r\n            \r\n            error = !fieldValid ? \"Заполните поле\" : \"\";\r\n\r\n            return{\r\n                ...data,\r\n                typeField,\r\n                name,\r\n                length,\r\n                error,\r\n                fieldValid\r\n            };\r\n        }\r\n        \r\n\r\n        return{\r\n            ...data,\r\n            typeField,\r\n            name,\r\n            length,\r\n            error,\r\n            fieldValid: !fieldValid\r\n        };\r\n    }\r\n\r\n    const validateForm = (data) => {\r\n\r\n        const { formOptions, formCountTagsActive, formValues } = props;\r\n        const { typeField, name, value, length, error, fieldValid } = data;\r\n\r\n\r\n        let formValid = false;\r\n\r\n        const form = {\r\n            formOptions,\r\n            formCountTagsActive: formCountTagsActive + addTag(value),\r\n            formValid,\r\n            formValues: {\r\n                ...formValues,\r\n                [name]: {\r\n                    typeField,\r\n                    name,\r\n                    value,\r\n                    length,\r\n                    error,\r\n                    fieldValid\r\n                }\r\n            }\r\n        };\r\n\r\n        formValid = formOptions.length >= 2 && form.formCountTagsActive >= 1;\r\n        \r\n        const values = Object.values(form.formValues);\r\n        formValid = values.every(el => el.fieldValid) && formValid;\r\n\r\n        form.formValid = formValid;\r\n\r\n        return form;\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const { type, name } = e.target;\r\n\r\n        const value = isType(e.target)\r\n\r\n        const data = {\r\n            typeField: type,\r\n            name,\r\n            value,\r\n            length: value.length\r\n        };\r\n\r\n        const validationField = validateField(data);\r\n\r\n        const validationForm = validateForm(validationField);\r\n\r\n        props.formChange(validationForm);\r\n    };\r\n\r\n    const { formChange, checkValid, formOptions, formCountTagsActive, formValues, formValid, ...attr } = props;\r\n        \r\n    const error = formValues[attr.name] ? formValues[attr.name].error : \"\";\r\n\r\n    return(\r\n        <Fragment>\r\n            <input { ...attr } onChange={ handleChange } />\r\n            { attr.type === \"text\" && <span className=\"quiz__error\" >{ error }</span> }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ form }) => {\r\n    return {\r\n        formOptions: form.formOptions,\r\n        formCountTagsActive: form.formCountTagsActive,\r\n        formValues: form.formValues,\r\n        formValid: form.formValid\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        formChange: (data) => { dispatch(formChange(data)) }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Field);","import Field from \"./Field\";\r\n\r\nexport default Field;","const formAddOption = (option) => {\r\n    return {\r\n        type: \"FORM_ADD_OPTION\",\r\n        option\r\n    };\r\n};\r\n\r\nconst formChange = (data) => {\r\n\r\n    const { formOptions, formCountTagsActive, formValues, formValid } = data;\r\n\r\n    return {\r\n        type: \"FORM_CHANGE\",\r\n        payload: {\r\n            formOptions, \r\n            formCountTagsActive,\r\n            formValues: { ...formValues },\r\n            formValid\r\n        }\r\n        \r\n    };\r\n};\r\n\r\nconst formSubmit = (error, message) => {\r\n    return {\r\n        type: \"FORM_SUBMIT\",\r\n        error,\r\n        message\r\n    };\r\n};\r\n\r\nexport { formChange, formAddOption, formSubmit };","import Tag from \"./Tag\";\r\nexport default Tag;","import React from \"react\";\r\nimport Field from \"../field\";\r\n\r\n\r\nconst Tag = ({ name, forId, value, checked }) => {\r\n    return(\r\n        <div className=\"tags__tag\">\r\n            <Field type=\"checkbox\" name={ name } id={ forId } value={ value } checked={ checked } />\r\n            <label htmlFor={ forId } >{ value }</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tag;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Tag from \"../tag\";\r\n\r\nimport \"./Tags.scss\"\r\n\r\nconst tags = [\r\n    { name: \"javascript\", forId: \"javascript\", value :\"Javascript\" },\r\n    { name: \"react\", forId: \"react\", value :\"React\" },\r\n    { name: \"agular\", forId: \"agular\", value :\"Angular\" },\r\n    { name: \"nodejs\", forId: \"nodejs\", value :\"Node.JS\" },\r\n    { name: \"web\", forId: \"web\", value :\"Web\" },\r\n    { name: \"pyton\", forId: \"pyton\", value :\"Pyton\" },\r\n    { name: \"csharp\", forId: \"csharp\", value :\"C#\" }\r\n]\r\n\r\nconst Tags = ({ formValues }) => {\r\n\r\n    return(\r\n        <div className=\"tags\">\r\n            {\r\n                tags.map((tag, idx) => {\r\n                    const { name } = tag;\r\n                    const value = !!formValues[name] ? formValues[name].value : false;\r\n                    return (\r\n                        <Tag key={ idx } { ...tag } checked={ value } />\r\n                    )\r\n                })\r\n            }\r\n            \r\n            {/* <Tag name=\"react\" forId=\"react\" value=\"React\" />\t\r\n            <Tag name=\"agular\" forId=\"agular\" value=\"Angular\" />\t\r\n            <Tag name=\"nodejs\" forId=\"nodejs\" value=\"Node.JS\" />\t\r\n            <Tag name=\"web\" forId=\"web\" value=\"Web\" />\t\r\n            <Tag name=\"pyton\" forId=\"pyton\" value=\"Pyton\" />\t\r\n            <Tag name=\"csharp\" forId=\"csharp\" value=\"C#\" /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ form }) => {\r\n    return {\r\n        formValues: form.formValues\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Tags);","import Tags from \"./Tags\";\r\nexport default Tags;","import Option from \"./Option\";\r\n\r\nexport default Option;","import React from \"react\";\r\nimport Field from \"../field\";\r\nimport { IoIosAddCircle } from \"react-icons/io\";\r\n\r\nconst Option = ({ onClick, ...props }) => {\r\n    return(\r\n        <div className=\"options__item\">\r\n            <Field type=\"text\" { ...props } className=\"options__filed\"/>\r\n            <button type=\"button\" className=\"options__add\" onClick={ onClick } >\r\n                <IoIosAddCircle />\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Option;","import Options from \"./Options\";\r\n\r\nexport default Options;","import React from \"react\";\r\nimport Option from \"../option\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { formAddOption } from \"../store/actions\";\r\n\r\nimport \"./Options.scss\";\r\n\r\nconst Options = ({ formOptions, formValues, formAddOption }) => {\r\n\r\n    \r\n    const handleClick = (option) => {\r\n        formAddOption(option);\r\n    }\r\n    return(\r\n        <div className=\"options\">  \r\n            { \r\n                formOptions.map((item, i, arr) => {\r\n                    const idx = i + 1;\r\n                    const opt = formValues[`option-${ idx }`];\r\n                    const value = opt ? opt.value : \"\";\r\n                    return(\r\n                        <Option\r\n                            key={ idx }\r\n                            placeholder={ `Вариант #${ idx }` }\r\n                            name={ `option-${ idx }` }\r\n                            value={ value }\r\n                            onClick={ () => handleClick(`option-${ arr.length + 1 }`) } />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ form }) => {\r\n    return {\r\n        formValues: form.formValues,\r\n        formOptions: form.formOptions\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        formAddOption: (option) => dispatch(formAddOption(option))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);","import Files from \"./Files\";\r\n\r\nexport default Files;","import React from \"react\";\r\nimport { IoMdImage } from \"react-icons/io\";\r\nimport Field from \"../field\";\r\n\r\nimport './Files.scss';\r\n\r\nconst Files = () => {\r\n    return(\r\n        <div className=\"files\">\r\n            <label htmlFor=\"files\" className=\"files__label\">\r\n                <IoMdImage />\r\n                <span>Фото</span>\r\n            </label>\r\n            <Field type=\"file\" id=\"files\" className=\"files__image\" name=\"images\" multiple={ true } />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Files;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n\tContainer,\n\tRow,\n\tCol\n} from 'react-bootstrap';\n\nimport Tags from \"./tags\";\nimport Field from \"./field\";\nimport Options from \"./options\";\nimport Files from \"./files\";\n\nimport { formSubmit } from \"./store/actions\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\n\nfunction App(props) {\n\n\tconst { formSubmit, formValues, formValid, submit: { isSubmit, error, message} } = props;\n\n\tconst {\n\t\ttitle = { value: \"\" },\n\t\tdiscuss = { value: \"\" },\n\t\tquestion = { value: \"\" }\n\t} = formValues;\n\n\n\tconst handleSubmit = async (e, formValues) => {\n\t\te.preventDefault();\n\t\t\n\t\t/*\n\t\t* Реализация с FormData\n\t\t*/\n\t\t// const appendFormData = (el, formData) => {\n\t\t// \tif(el.typeField === \"file\"){\n\t\t// \t\tArray.prototype.forEach.call(el.value, (field, i) => {\n\t\t// \t\t\tformData.append(\"images\", field, field.name);\n\t\t// \t\t});\n\t\t// \t}\n\t\t// \telse{\n\t\t// \t\tformData.append(el.name, el.value)\n\t\t// \t}\n\t\n\t\t// }\n\t\t// const formData = new FormData();\n\t\t// const values = Object.values(formValues);\n\n\t\t// values.forEach((el, i) => {\n\t\t// \tappendFormData(el, formData);\n\t\t// });\n\t\t// const reponse = await fetch(\"http://localhost:4000/quiz\", {\n\t\t// \tmethod: \"POST\",\n\t\t// \tbody: formData\n\t\t// });\n\n\t\t// if(reponse.ok){\n\t\t// \tformSubmit();\n\t\t// }\n\n\t\t\n\t\t/*\n\t\t* Реализация для JSON-Server\n\t\t*/\n\t\ttry {\n\t\t\tconst response = await fetch(\"http://localhost:4000/quiz\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(formValues)\n\t\t\t});\n\n\t\t\tif(response.ok){\n\t\t\t\tconsole.log(response);\n\t\t\t\tformSubmit(false, \"Данные отправлены\");\n\t\t\t}\n\t\t}\n\t\tcatch(err) {\n\t\t\tconsole.log(err);\n\t\t\tformSubmit(true, \"Произошла ошибка\");\n\t\t}\n\t\t\n\t}\n\n\treturn(\n\t\t<div className=\"quiz\">\n\t\t\t<form method=\"post\" onSubmit={ (e) => handleSubmit(e, formValues) } >\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md={{ span: \"6\", offset: \"3\" }}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t\t<Tags />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t\t<div className=\"quiz__length\">\n\t\t\t\t\t\t\t\t\t\t<Field className=\"quiz__title\" type=\"text\" name=\"title\" placeholder=\"Заголовок\" value={ title.value } />\n\t\t\t\t\t\t\t\t\t\t<span className=\"quiz__count\">{ title.length ? title.length : 0 }</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"quiz__length\">\n\t\t\t\t\t\t\t\t\t\t<Field className=\"quiz__field quiz__discuss\" type=\"text\" name=\"discuss\" placeholder=\"Что вы хотите обсудить?\" value={ discuss.value } />\n\t\t\t\t\t\t\t\t\t\t<span className=\"quiz__count\">{ discuss.length ? discuss.length : 0 }</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t\t<Field type=\"text\" className=\"quiz__field quiz__question\" name=\"question\" placeholder=\"Задайте вопрос\" value={ question.value } />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t\t<Options />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t\t<div className=\"quiz__bottom\">\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Files />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs=\"6\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Field type=\"submit\" className=\"quiz__btn\" name=\"btn\" value=\"Сохранить\" disabled={ !formValid } />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t(isSubmit && !error) && <div className=\"quiz__success quiz__success--active\" >{ message }</div>\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t(isSubmit && error) && <div className=\"quiz__success quiz__success--error\" >{ message }</div>\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = ({ form }) => {\n    return form;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tformSubmit: (error, message) => dispatch(formSubmit(error, message))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initialState = {\r\n    formOptions: [\"option-1\"],\r\n    formCountTagsActive: 0,\r\n    formValues: {\r\n        \"option-1\": {\r\n            typeField: \"text\",\r\n            name: \"option-1\",\r\n            value: \"\",\r\n            length: 0,\r\n            error: \"\",\r\n            fieldValid: false\r\n        }\r\n    },\r\n    formValid: false,\r\n    submit: {\r\n        isSubmit: false,\r\n        error: true,\r\n        message: \"\"\r\n    }\r\n};\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case \"FORM_ADD_OPTION\": \r\n            return {\r\n                ...state,\r\n                formOptions: [\r\n                    ...state.formOptions,\r\n                    action.option\r\n                ],\r\n                formValues: {\r\n                    ...state.formValues,\r\n                    [action.option]: {\r\n                        typeField: \"text\",\r\n                        name: action.option,\r\n                        value: \"\",\r\n                        length: 0,\r\n                        error: \"\",\r\n                        fieldValid: false\r\n                    }\r\n                },\r\n                submit: {\r\n                    isSubmit: false,\r\n                    error: true,\r\n                    message: \"\"\r\n                }\r\n            }\r\n        case \"FORM_CHANGE\": \r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                submit: {\r\n                    isSubmit: false,\r\n                    error: true,\r\n                    message: \"\"\r\n                }\r\n            }\r\n        case \"FORM_SUBMIT\": \r\n            return {\r\n                ...initialState,\r\n                submit:{\r\n                    isSubmit: true,\r\n                    error: action.error,\r\n                    message: action.message,\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default formReducer;","import { combineReducers } from \"redux\";\r\nimport formReducer from './form';\r\n\r\nconst rootReducer = combineReducers({\r\n    form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from './reducers/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\n\nimport store from './store';\n\nimport './index.scss';\n\nReactDOM.render(<Provider store={ store } ><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}