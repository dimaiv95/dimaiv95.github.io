{"version":3,"sources":["components/error-indicator/error-indicator.png","components/error-button/index.js","components/error-button/error-button.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/header/index.js","components/header/header.js","components/spiner/index.js","components/spiner/spiner.js","components/hoc-helper/with-data.js","components/swapi-service-context/swapi-service-context.js","components/hoc-helper/with-swapi-service.js","components/hoc-helper/with-child-function.js","components/hoc-helper/compose.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/item-list.js","components/item-list/index.js","components/sw-components/item-lists.js","components/item-details/item-details.js","components/sw-components/person-details.js","components/sw-components/planet-details.js","components/sw-components/starship-details.js","components/row/index.js","components/row/row.js","components/pages/people-page.js","components/pages/planet-page.js","components/pages/starship-page.js","services/swapi-service.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","ErrorIndicator","ErrorButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","renderError","_this2","foo","bar","react_default","a","createElement","className","onClick","setState","Component","src","errorIndicator","alt","ErrorBoundry","hasError","components_error_indicator","props","children","Header","react_router_dom","to","activeClassName","Spiner","withData","View","_Component","_class","data","loading","error","inherits","createClass","key","value","getData","then","catch","_this$state","components_spiner","assign","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMethodsToProps","Wrapped","swapiService","serviceProps","withChildFunction","fn","compose","_len","arguments","length","func","Array","_key","component","arr","callback","firstValue","result","trueValue","undefined","i","array","index","myReduceRight","prevResult","RandomPlanet","onPlanetLoaded","planet","onError","err","updatePlanet","id","random","interval","setInterval","updateInterval","clearInterval","min","max","rand","Math","floor","hasData","errorMessage","spiner","content","random_planet_PlanetView","defaultProps","PlanetView","_ref","name","population","rotationPeriod","diameter","Fragment","concat","getPlanet","ItemList","onItemSelected","renderLabel","items","map","item","label","renderName","_ref2","PersonList","getAllPeople","birthYear","PlanetList","getAllPlanets","StarshipList","getAllStarships","Record","field","ItemDetails","update","_this$props","itemId","getImageUrl","view","image","prevProps","selected","item_details_PersonView","imageUrl","PersonView","components_error_boundry","components_error_button","Children","child","cloneElement","getPerson","getPersonImage","item_details_item_details","item_details_Record","getPlanetImage","getStarship","getStarshipImage","console","log","Row","left","right","withRouter","history","match","params","components_row","push","person_details","PlanetPage","selectedItem","planet_details","SwapiService","_apiBase","_imageBase","_callee","res","regenerator_default","wrap","_context","prev","next","getResource","sent","abrupt","results","_transformPerson","stop","_callee2","person","_context2","_callee3","_context3","_transformPlanet","_callee4","_context4","_callee5","_context5","_transformStarship","_callee6","starship","_context6","_ref7","_ref8","_ref9","_extractId","url","rotation_period","gender","birth_year","eyeColor","eye_color","model","manufacture","costInCredits","cost_in_credits","crew","passengers","cargoCapacity","cargo_capacity","fetch","ok","Error","status","json","App","components_header","components_random_planet","react_router","path","render","exact","PeoplePage","StarshipPage","starship_details","ReactDOM","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.33587cbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-indicator.00da8937.png\";","import ErrorIndicator from \"./error-button\";\r\nexport default ErrorIndicator;","import React, { Component } from \"react\";\r\n\r\nimport \"./error-button.css\";\r\n\r\nclass ErrorButton extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            renderError: false\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n        if(this.state.renderError){\r\n            this.foo.bar = 0;\r\n        }\r\n\r\n        return(\r\n\r\n            <button className=\"error-button btn btn-danger btn-lg\"\r\n                    onClick={ () => { this.setState({ renderError: true }) } }>\r\n                    Throw Error\r\n            </button>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorButton;\r\n\r\n","import ErrorIndicator from \"./error-indicator\";\r\nexport default ErrorIndicator;","import React from \"react\";\r\n\r\nimport \"./error-indicator.css\";\r\nimport errorIndicator from \"./error-indicator.png\";\r\n\r\nconst ErrorIndicator = () => {\r\n\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={errorIndicator} alt=\"Error\" />\r\n            <h2 className=\"error-indicator__title\">Error!</h2>\r\n            <p className=\"error-indicator__text\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Magnam asperiores deleniti doloribus tempora quasi?</p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from \"./error-boundry\";\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\n\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({\r\n            hasError: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.hasError){\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import Header from \"./header\"\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link, NavLink  } from \"react-router-dom\";\r\n\r\nimport \"./header.css\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <header className=\"header \">\r\n            <div className=\"row align-items-center\">\r\n                <h1 className=\"header__title col-4\">\r\n                    <Link to=\"/\" className=\"test\" >Star DB</Link>\r\n                </h1>\r\n                <div className=\"header__nav col\">\r\n                    <NavLink  to=\"/people/\" className=\"header__nav-link\" activeClassName=\"active\">People</NavLink >                \r\n                    <NavLink  to=\"/planets/\" className=\"header__nav-link\" activeClassName=\"active\">Planets</NavLink >\r\n                    <NavLink  to=\"/starships/\" className=\"header__nav-link\" activeClassName=\"active\" >Starships</NavLink >\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n\r\n};\r\n\r\nexport default Header;","import Spiner from \"./spiner\";\r\nexport default Spiner;","import React from \"react\";\r\n\r\nimport \"./spiner.css\";\r\n\r\nconst Spiner = () => {\r\n\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Spiner;","import React, {Component} from \"react\";\r\n\r\nimport Spiner from \"../spiner\";\r\n\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nconst withData = (View) => {\r\n    return class extends Component {\r\n\r\n        constructor(){\r\n            super();\r\n    \r\n            this.state = {\r\n                data: null,\r\n                loading: true,\r\n                error: false\r\n            };\r\n    \r\n        }\r\n    \r\n        componentDidMount(){\r\n\r\n            this.setState({\r\n                loading: true,\r\n                error: false\r\n            });\r\n\r\n            this.props.getData()\r\n                .then((data) => {\r\n                    this.setState({\r\n                        data,\r\n                        loading: false\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        loading: false,\r\n                        error: true\r\n                    });\r\n                });\r\n        }\r\n\r\n        render(){\r\n          \r\n            const { data, loading, error } = this.state;\r\n\r\n            if(loading){\r\n                return (\r\n                    <div className=\"list\">\r\n                        <Spiner />\r\n                    </div>\r\n                );\r\n            }\r\n            if(error){\r\n                return (\r\n                    <div className=\"list\">\r\n                        <ErrorIndicator />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"list\">\r\n                    <View {...this.props} data={data} />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withData;","import React from \"react\";\r\n\r\nconst {\r\n    Provider : SwapiServiceProvider,\r\n    Consumer : SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    SwapiServiceProvider,\r\n    SwapiServiceConsumer\r\n};","import React from \"react\";\r\nimport { SwapiServiceConsumer } from \"../swapi-service-context\";\r\n\r\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <SwapiServiceConsumer>\r\n                {\r\n                    (swapiService) => {\r\n                        const serviceProps = mapMethodsToProps(swapiService);\r\n                        return (\r\n                            <Wrapped {...props} {...serviceProps} />\r\n                        );\r\n                       \r\n                    }\r\n                }\r\n            </SwapiServiceConsumer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withSwapiService;","import React from \"react\";\r\n\r\nconst withChildFunction = (fn) => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <Wrapped {...props} >\r\n                {fn}\r\n            </Wrapped>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withChildFunction;","function myReduceRight(arr, callback, firstValue){\r\n\r\n    let result,\r\n        trueValue = firstValue !== undefined,\r\n        length = trueValue ? arr.length : arr.length - 1; \r\n\r\n    for(let i = length; i >= 0; i--){\r\n\r\n        let value = trueValue ? arr[i] : arr[i];\r\n         let array = arr;\r\n         let index = i;\r\n\r\n         result = (i === length ? (trueValue) ? firstValue : arr[i] : callback(result, value, array, index));\r\n         \r\n    }\r\n\r\n    return result;\r\n\r\n}\r\n\r\nconst compose = (...func) => (component) => {\r\n    return myReduceRight(func, function(prevResult, fn){\r\n        return fn(prevResult);\r\n    }, component);\r\n};\r\n\r\n\r\n// const compose = (...func) => (component) => {\r\n//     return func.reduceRight((prevResult, fn) => {\r\n//         return fn(prevResult);\r\n//     }, component);\r\n// };\r\n\r\nexport default compose;\r\n","import React, { Component } from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Spiner from \"../spiner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nimport { withSwapiService } from \"../hoc-helper\";\r\n\r\nimport \"./random-planet.css\";\r\n\r\n\r\nclass RandomPlanet extends Component{\r\n\r\n    static defaultProps = {\r\n        updateInterval: 3000\r\n    };\r\n\r\n    static propTypes = {\r\n        updateInterval: PropTypes.number\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n           planet: {},\r\n           loading: true,\r\n           error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updatePlanet();\r\n\r\n        this.interval = setInterval(this.updatePlanet, this.props.updateInterval);\r\n        \r\n    }\r\n\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n            error: false\r\n         });\r\n        \r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({ \r\n            error: true,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    updatePlanet = () => { \r\n        const id = this.random(2, 19);\r\n\r\n        const { getData } = this.props;\r\n        \r\n        getData(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    random(min, max){\r\n        var rand = min + Math.random() * (max + 1 - min);\r\n        rand = Math.floor(rand);\r\n        return rand;\r\n    }\r\n\r\n    render(){\r\n\r\n        const { planet, loading, error } = this.state;\r\n\r\n        const hasData = !(loading || error);\r\n        const errorMessage = error ? <ErrorIndicator /> : null;\r\n\r\n        const spiner = loading ? <Spiner /> : null;\r\n        const content = hasData ? <PlanetView planet={planet}/> : null;\r\n\r\n        return (\r\n            <div className=\"random-planet\">\r\n                <div className=\"row\">\r\n                    { errorMessage }\r\n                    { spiner }\r\n                    { content }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n\r\n    const { id, name, population, rotationPeriod, diameter } = planet;\r\n\r\n    return (\r\n        <React.Fragment>\r\n                \r\n                <div className=\"col-sm-4\">\r\n                    <img src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} className=\"random-planet__img\" alt={name} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <h2 className=\"random-planet__title\">{ name }</h2>\r\n                    <ul className=\"random-planet__list list-group list-group-flush\">\r\n                        <li className=\"random-planet__item list-group-item\">\r\n                            <span>Population:</span>\r\n                            <span>{ population }</span>\r\n                        </li>\r\n                        <li className=\"random-planet__item list-group-item\">\r\n                            <span>Rotation Period:</span>\r\n                            <span>{ rotationPeriod }</span>\r\n                        </li>\r\n                        <li className=\"random-planet__item list-group-item\">\r\n                            <span>Diameter:</span>\r\n                            <span>{ diameter }</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst mapMethodsToProps = function(swapiService){\r\n    return {\r\n        getData: swapiService.getPlanet\r\n    }\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(RandomPlanet);","import RandomPlanet from \"./random-planet\"\r\n\r\nexport default RandomPlanet;","import React from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport \"./item-list.css\";\r\n\r\nconst ItemList = (props) => {\r\n\r\n    const { data, onItemSelected, children: renderLabel } = props;\r\n\r\n    const items =  data.map((item) => {\r\n\r\n        const { id } = item;\r\n        const label = renderLabel(item);            \r\n\r\n        return (\r\n            <li className=\"list-group-item item-list__name\"\r\n                key={ id }\r\n                onClick={() => onItemSelected(id)} >\r\n                { label }\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group item-list\">\r\n            { items }\r\n        </ul>\r\n    );\r\n};\r\n\r\nItemList.defaultProps = {\r\n    onItemSelected: () => {}\r\n}\r\n\r\nItemList.propTypes = {\r\n    onItemSelected: PropTypes.func,\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ItemList;","import ItemList from \"./item-list\"\r\n\r\nexport default ItemList;","import ItemList from \"../item-list\";\r\nimport { withData, withSwapiService, withChildFunction, compose } from \"../hoc-helper\";\r\n\r\nconst renderPerson = ({ name, birthYear }) => (`${name} (${birthYear})` );\r\nconst renderName = ({ name }) => name;\r\n\r\nconst mapPersonMethodsToProps = ( swapiService ) => {\r\n    return {\r\n        getData: swapiService.getAllPeople\r\n    }\r\n}\r\n\r\nconst mapPlanetMethodsToProps = ( swapiService ) => {\r\n    return {\r\n        getData: swapiService.getAllPlanets\r\n    }\r\n}\r\n\r\nconst mapStarshipMethodsToProps = ( swapiService ) => {\r\n    return {\r\n        getData: swapiService.getAllStarships\r\n    }\r\n}\r\n\r\nconst PersonList = compose(\r\n                        withSwapiService(mapPersonMethodsToProps),\r\n                        withData,\r\n                        withChildFunction(renderPerson)\r\n                    )(ItemList);\r\n\r\nconst PlanetList = compose(\r\n                        withSwapiService(mapPlanetMethodsToProps),\r\n                        withData,\r\n                        withChildFunction(renderName)\r\n                    )(ItemList);\r\n\r\nconst StarshipList = compose(\r\n                        withSwapiService(mapStarshipMethodsToProps),\r\n                        withData,\r\n                        withChildFunction(renderName)\r\n                    )(ItemList);\r\n\r\nexport {\r\n    PersonList,\r\n    PlanetList,\r\n    StarshipList\r\n};","import React, { Component } from \"react\";\r\n\r\nimport Spiner from \"../spiner\";\r\nimport ErrorBoundry from \"../error-boundry\";\r\nimport ErrorButton from \"../error-button\";\r\n\r\nimport \"./item-details.css\";\r\n\r\nexport const Record = ({ item, field, label }) => {\r\n    return(\r\n        <li className=\"list-group-item person-details__name\">\r\n            <span>{ label }</span>\r\n            <span>{ item[field] }</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nclass ItemDetails extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            item: null,\r\n            image: null,\r\n            loading: false,\r\n            view: false\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.update();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps){\r\n        if(this.props.itemId !== prevProps.itemId){\r\n            this.update();\r\n        }\r\n    }\r\n    \r\n    update = () => {\r\n        const { itemId, getData, getImageUrl } = this.props;\r\n\r\n        if(!itemId){\r\n            return;\r\n        }\r\n \r\n        this.setState({\r\n            loading: true,\r\n            view: false\r\n        });\r\n        \r\n        getData(itemId)\r\n            .then((item) => {\r\n                \r\n                this.setState({\r\n                    item,\r\n                    image: getImageUrl(item),\r\n                    loading: false,\r\n                    view: true\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const { item, loading, view, image } = this.state;\r\n\r\n        const hasData = (!loading && view);\r\n\r\n        const spiner = loading && !view ? <Spiner /> : null;\r\n\r\n        const selected = !item ? <span className=\"selected\">Selected a item from a list...</span> : null;\r\n\r\n        const content = hasData && this.props.children ? <PersonView item={item} imageUrl={image} children={this.props.children} /> : null;\r\n\r\n        return (\r\n            <div className=\"person-details\">\r\n\r\n                {selected}\r\n                {spiner}\r\n                {content}\r\n\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\n};\r\n\r\nconst PersonView = ({ item, imageUrl, children }) => {\r\n\r\n    const { name } = item;\r\n\r\n    return (\r\n        <ErrorBoundry>\r\n            <div className=\"row \">\r\n                <div className=\"col-sm-4\">\r\n                    <img src={imageUrl} className=\"person-details__img\" alt={item.name} />\r\n                </div>\r\n                <div className=\"col-sm-8\"> \r\n                    <h4 className=\"person-details__title\">{ name }</h4>\r\n                    <ErrorButton />\r\n                    <ul className=\"list-group list-group-flush person-details__card\">\r\n                        { \r\n                            React.Children.map(children, (child) => {\r\n                                \r\n\r\n                                return React.cloneElement(child, { item });\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </ErrorBoundry>\r\n    );\r\n};\r\n\r\nexport default ItemDetails;\r\n\r\n","import React from \"react\";\r\nimport ItemDetails, { Record } from \"../item-details/item-details\";\r\nimport { withSwapiService } from \"../hoc-helper\";\r\n\r\nconst PersonDetails = (props) => {\r\n    return(\r\n        <ItemDetails {...props} >\r\n            <Record field=\"gender\" label=\"Gender\" />\r\n            <Record field=\"birthYear\" label=\"Birth Year\" />\r\n            <Record field=\"eyeColor\" label=\"Eye Color\" />\r\n        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = function(swapiService){\r\n    \r\n    return {\r\n        getData: swapiService.getPerson,\r\n        getImageUrl: swapiService.getPersonImage\r\n    }\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);","import React from \"react\";\r\nimport ItemDetails, { Record } from \"../item-details/item-details\";\r\nimport { withSwapiService } from \"../hoc-helper\";\r\n\r\nconst PlanetDetails = (props) => {\r\n    return (\r\n        <ItemDetails {...props} >\r\n            <Record field=\"population\" label=\"Population\" />\r\n            <Record field=\"rotationPeriod\" label=\"Rotation Period\" />\r\n            <Record field=\"diameter\" label=\"Diameter\" />\r\n        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = function(swapiService){\r\n    \r\n    return {\r\n        getData: swapiService.getPlanet,\r\n        getImageUrl: swapiService.getPlanetImage\r\n    }\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);","import React from \"react\";\r\nimport ItemDetails, { Record } from \"../item-details/item-details\";\r\nimport { withSwapiService } from \"../hoc-helper\";\r\n\r\nconst StarshipDetails = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <ItemDetails {...props} >\r\n            <Record field=\"model\" label=\"Model\" />\r\n            <Record field=\"length\" label=\"Length\" />\r\n            <Record field=\"costInCredits\" label=\"Cost\" />\r\n        </ItemDetails>\r\n    );\r\n};\r\n\r\nconst mapMethodsToProps = function(swapiService){\r\n    \r\n    return {\r\n        getData: swapiService.getStarship,\r\n        getImageUrl: swapiService.getStarshipImage\r\n    }\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);","import Row from \"./row\";\r\n\r\nexport default Row;","import React from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst Row = ({ left, right }) => {\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                {left}\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                {right}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRow.propTypes = {\r\n    left: PropTypes.node,\r\n    right: PropTypes.node\r\n};\r\n\r\nexport default Row;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { PersonList, PersonDetails } from \"../sw-components\"\r\n\r\nimport Row from \"../row\";\r\n\r\nconst PeoplePage = ({ history, match }) => {\r\n\r\n    const { id } = match.params;\r\n    return (\r\n        <Row\r\n            left={<PersonList onItemSelected={ ( itemId ) => history.push(itemId) } ></PersonList>}\r\n            right={<PersonDetails itemId={ id } />}\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(PeoplePage);","import React, { Component } from \"react\";\r\n\r\nimport { PlanetList, PlanetDetails } from \"../sw-components\"\r\n\r\nimport Row from \"../row\";\r\n\r\nclass PlanetPage extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            selectedItem: null\r\n        };\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedItem: id\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Row\r\n                left={<PlanetList onItemSelected={this.onItemSelected} ></PlanetList>}\r\n                right={<PlanetDetails itemId={this.state.selectedItem} />}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlanetPage;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { StarshipList } from \"../sw-components\"\r\n\r\nconst StarshipPage = ({ history }) => {\r\n\r\n    const onItemSelected = (itemId) => {\r\n        history.push(itemId);\r\n    };\r\n\r\n    return(\r\n        <StarshipList onItemSelected={ onItemSelected } />\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(StarshipPage);","export default class SwapiService {\r\n\r\n    _apiBase = \"https://swapi.co/api\";\r\n    _imageBase = \"https://starwars-visualguide.com/assets/img\";\r\n\r\n    async getResource(url){\r\n        \r\n         const res = await fetch(`${this._apiBase}${url}`);\r\n         //console.log(res.status);\r\n        if(!res.ok){\r\n            throw new Error(`Could not fatch ${url}, received ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllPeople = async () => {\r\n        const res = await this.getResource(\"/people/\");\r\n        return res.results.map(this._transformPerson);\r\n    };\r\n\r\n    getPerson = async (id) => {\r\n        const person = await this.getResource(`/people/${id}/`);\r\n        return this._transformPerson(person);\r\n    };\r\n\r\n    getAllPlanets = async () => {\r\n        const res = await this.getResource(\"/planets/\");\r\n        return res.results.map(this._transformPlanet);\r\n    };\r\n\r\n    getPlanet = async (id) => {\r\n        const planet = await this.getResource(`/planets/${id}/`);\r\n        return this._transformPlanet(planet);\r\n    };\r\n\r\n    getAllStarships = async () => {\r\n        const res = await this.getResource(\"/starships/\");\r\n        return res.results.map(this._transformStarship);\r\n    };\r\n\r\n    getStarship = async (id) => {\r\n        const starship = await this.getResource(`/starships/${id}/`);\r\n        return this._transformStarship(starship);\r\n    };\r\n\r\n    getPersonImage = ({id}) => {\r\n        return `${this._imageBase}/characters/${id}.jpg`;\r\n    };\r\n\r\n    getStarshipImage = ({id}) => {\r\n        return `${this._imageBase}/starships/${id}.jpg`;\r\n    };\r\n\r\n    getPlanetImage = ({id}) => {\r\n        return `${this._imageBase}/planets/${id}.jpg`;\r\n    };\r\n\r\n    _extractId = (item) => {\r\n        const idRegExp = /\\/(\\d+)\\/$/;\r\n        return item.url.match(idRegExp)[1];\r\n    };\r\n\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter,\r\n        };\r\n    };\r\n\r\n    _transformPerson = (person) => {\r\n        return {\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birth_year,\r\n            eyeColor: person.eye_color,\r\n        };\r\n    };\r\n\r\n    _transformStarship = (starship) => {\r\n        return {\r\n            id: this._extractId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacture: starship.manufacture,\r\n            costInCredits: starship.cost_in_credits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargo_capacity,\r\n        };\r\n    };\r\n\r\n}","import App from \"./app\"\r\n\r\nexport default App;","import React, {Component} from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport ErrorButton from \"../error-button\";\r\nimport ErrorBoundry from \"../error-boundry\";\r\nimport Header from \"../header\";\r\nimport RandomPlanet from \"../random-planet\";\r\nimport { PeoplePage, PlanetPage, StarshipPage } from \"../pages\";\r\nimport { StarshipDetails } from \"../sw-components\";\r\n\r\nimport SwapiService from \"../../services/swapi-service\";\r\nimport { SwapiServiceProvider } from \"../swapi-service-context\";\r\n\r\nimport \"./app.css\";\r\n\r\nclass App extends Component{\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"stardb\">\r\n                <ErrorBoundry>\r\n                    <SwapiServiceProvider value={this.swapiService} >\r\n                        <Router>\r\n                            <Header />\r\n                            <RandomPlanet />\r\n                            <ErrorButton />\r\n                            \r\n                            <Route  path=\"/\"\r\n                                    render={() => <h2>Welcome to Star DB</h2> }\r\n                                    exact />\r\n\r\n                            <Route  path=\"/people/:id?\" component={PeoplePage} />\r\n\r\n                            <Route  path=\"/planets/\" component={PlanetPage} />\r\n\r\n                            <Route  path=\"/starships/\"\r\n                                    component={StarshipPage}\r\n                                    exact />\r\n\r\n                            <Route  path=\"/starships/:id\" \r\n                                    render={({match}) => {\r\n                                        const { id } = match.params;\r\n                                        return <StarshipDetails itemId={id} />\r\n                                    } } />\r\n\r\n                        </Router>\r\n                    </SwapiServiceProvider>\r\n                </ErrorBoundry>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}